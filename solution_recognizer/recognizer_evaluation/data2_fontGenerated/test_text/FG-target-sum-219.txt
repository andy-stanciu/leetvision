class Solution {

    private int helper(int[] nums, int index, int param1, int[][] dp) {
        if (index < 0) {
            if (param1 == 2000)
                return 1;
            return 0;
        }
        if (dp[index][param1] != -1)
            return dp[index][param1];
        int add = helper(nums, index - 1, param1 + nums[index], dp);
        int sub = helper(nums, index - 1, param1 - nums[index], dp);
        return dp[index][param1] = add + sub;
    }

    public int method1(int[] nums, int param1) {
        int n = nums.length;
        param1 = param1 + 2000;
        int[][] dp = new int[n][4001];
        for (int[] arr : dp) Arrays.fill(arr, -1);
        return helper(nums, n - 1, param1, dp);
    }
}
