class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if (obstacleGrid[0][0] == 1)
            return 0;
        int m = obstacleGrid.length, n = obstacleGrid[0].length;
        int[][] dp = new int[m + 1][n + 1];
        //first(top left)
        dp[1][1] = 1;
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (i == 1 && j == 1)
                    continue;
                if (//if obstacle and i write [i-1][j-1] instead of [i][j] because matrix is 0 indexed and dp is 1 indexed
                obstacleGrid[i - 1][j - 1] == 1)
                    //if obstacle and i write [i-1][j-1] instead of [i][j] because matrix is 0 indexed and dp is 1 indexed
                    dp[i][j] = 0;
                else
                    //(from up + from left)
                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        }
        return dp[m][n];
    }
}
