01-matrix:updateMatrix, 1-bit-and-2-bit-characters:isOneBitCharacter, 132-pattern:find132pattern, 2-keys-keyboard:minSteps, 24-game:judgePoint24, 3sum:threeSum, 3sum-closest:threeSumClosest, 3sum-with-multiplicity:threeSumMulti, 4sum:fourSum, 4sum-ii:fourSumCount, a-number-after-a-double-reversal:isSameAfterReversals, abbreviating-the-product-of-a-range:abbreviateProduct, account-balance-after-rounded-purchase:accountBalanceAfterPurchase, accounts-merge:accountsMerge, add-binary:addBinary, add-digits:addDigits, add-edges-to-make-degrees-of-all-nodes-even:isPossible, add-minimum-number-of-rungs:addRungs, add-one-row-to-tree:addOneRow, add-strings:addStrings, add-to-array-form-of-integer:addToArrayForm, add-two-integers:sum, add-two-numbers:addTwoNumbers, add-two-numbers-ii:addTwoNumbers, adding-spaces-to-a-string:addSpaces, adding-two-negabinary-numbers:addNegabinary, additive-number:isAdditiveNumber, adjacent-increasing-subarrays-detection-i:hasIncreasingSubarrays, adjacent-increasing-subarrays-detection-ii:maxIncreasingSubarrays, advantage-shuffle:advantageCount, airplane-seat-assignment-probability:nthPersonGetsNthSeat, alert-using-same-key-card-three-or-more-times-in-a-one-hour-period:alertNames, alice-and-bob-playing-flower-game:flowerGame, all-ancestors-of-a-node-in-a-directed-acyclic-graph:getAncestors, all-divisions-with-the-highest-score-of-a-binary-array:maxScoreIndices, all-elements-in-two-binary-search-trees:getAllElements, all-oone-data-structure:AllOne, all-paths-from-source-to-target:allPathsSourceTarget, all-possible-full-binary-trees:allPossibleFBT, allocate-mailboxes:minDistance, alphabet-board-path:alphabetBoardPath, alternating-digit-sum:alternateDigitSum, alternating-groups-i:numberOfAlternatingGroups, alternating-groups-ii:numberOfAlternatingGroups, alternating-groups-iii:numberOfAlternatingGroups, ambiguous-coordinates:ambiguousCoordinates, amount-of-time-for-binary-tree-to-be-infected:amountOfTime, angle-between-hands-of-a-clock:angleClock, ant-on-the-boundary:returnToBoundaryCount, append-characters-to-string-to-make-subsequence:appendCharacters, append-k-integers-with-minimal-sum:minimalKSum, apple-redistribution-into-boxes:minimumBoxes, apply-bitwise-operations-to-make-strings-equal:makeStringsEqual, apply-discount-every-n-orders:Cashier, apply-discount-to-prices:discountPrices, apply-operations-on-array-to-maximize-sum-of-squares:maxSum, apply-operations-to-an-array:applyOperations, apply-operations-to-make-all-array-elements-equal-to-zero:checkArray, apply-operations-to-make-string-empty:lastNonEmptyString, apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k:minOperations, apply-operations-to-make-two-strings-equal:minOperations, apply-operations-to-maximize-frequency-score:maxFrequencyScore, apply-operations-to-maximize-score:maximumScore, arithmetic-slices:numberOfArithmeticSlices, arithmetic-slices-ii-subsequence:numberOfArithmeticSlices, arithmetic-subarrays:checkArithmeticSubarrays, arranging-coins:arrangeCoins, array-nesting:arrayNesting, array-of-doubled-pairs:canReorderDoubled, array-partition:arrayPairSum, array-with-elements-not-equal-to-average-of-neighbors:rearrangeArray, as-far-from-land-as-possible:maxDistance, assign-cookies:findContentChildren, asteroid-collision:asteroidCollision, available-captures-for-rook:numRookCaptures, average-of-levels-in-binary-tree:averageOfLevels, average-salary-excluding-the-minimum-and-maximum-salary:average, average-value-of-even-numbers-that-are-divisible-by-three:averageValue, average-waiting-time:averageWaitingTime, avoid-flood-in-the-city:avoidFlood, backspace-string-compare:backspaceCompare, bag-of-tokens:bagOfTokensScore, balance-a-binary-search-tree:balanceBST, balanced-binary-tree:isBalanced, base-7:convertToBase7, baseball-game:calPoints, basic-calculator:calculate, basic-calculator-ii:calculate, basic-calculator-iv:basicCalculatorIV, battleships-in-a-board:countBattleships, beautiful-arrangement:countArrangement, beautiful-arrangement-ii:constructArray, beautiful-array:beautifulArray, beautiful-towers-i:maximumSumOfHeights, beautiful-towers-ii:maximumSumOfHeights, best-poker-hand:bestHand, best-position-for-a-service-centre:getMinDistSum, best-sightseeing-pair:maxScoreSightseeingPair, best-team-with-no-conflicts:bestTeamScore, best-time-to-buy-and-sell-stock:maxProfit, best-time-to-buy-and-sell-stock-ii:maxProfit, best-time-to-buy-and-sell-stock-iii:maxProfit, best-time-to-buy-and-sell-stock-iv:maxProfit, best-time-to-buy-and-sell-stock-with-cooldown:maxProfit, best-time-to-buy-and-sell-stock-with-transaction-fee:maxProfit, binary-gap:binaryGap, binary-number-with-alternating-bits:hasAlternatingBits, binary-prefix-divisible-by-5:prefixesDivBy5, binary-search:search, binary-search-tree-iterator:BSTIterator, binary-search-tree-to-greater-sum-tree:bstToGst, binary-string-with-substrings-representing-1-to-n:queryString, binary-subarrays-with-sum:numSubarraysWithSum, binary-tree-cameras:minCameraCover, binary-tree-coloring-game:btreeGameWinningMove, binary-tree-inorder-traversal:inorderTraversal, binary-tree-level-order-traversal:levelOrder, binary-tree-level-order-traversal-ii:levelOrderBottom, binary-tree-maximum-path-sum:maxPathSum, binary-tree-paths:binaryTreePaths, binary-tree-postorder-traversal:postorderTraversal, binary-tree-preorder-traversal:preorderTraversal, binary-tree-pruning:pruneTree, binary-tree-right-side-view:rightSideView, binary-tree-tilt:findTilt, binary-tree-zigzag-level-order-traversal:zigzagLevelOrder, binary-trees-with-factors:numFactoredBinaryTrees, binary-watch:readBinaryWatch, bitwise-and-of-numbers-range:rangeBitwiseAnd, bitwise-ors-of-subarrays:subarrayBitwiseORs, bitwise-xor-of-all-pairings:xorAllNums, block-placement-queries:getResults, boats-to-save-people:numRescueBoats, booking-concert-tickets-in-groups:BookMyShow, brace-expansion-ii:braceExpansionII, break-a-palindrome:breakPalindrome, brick-wall:leastBricks, bricks-falling-when-hit:hitBricks, broken-calculator:brokenCalc, buddy-strings:buddyStrings, build-a-matrix-with-conditions:buildMatrix, build-an-array-with-stack-operations:buildArray, build-array-from-permutation:buildArray, build-array-where-you-can-find-the-maximum-exactly-k-comparisons:numOfArrays, building-boxes:minimumBoxes, bulb-switcher:bulbSwitch, bulb-switcher-ii:flipLights, bulls-and-cows:getHint, burst-balloons:maxCoins, bus-routes:numBusesToDestination, button-with-longest-push-time:buttonWithLongestTime, buy-two-chocolates:buyChoco, calculate-amount-paid-in-taxes:calculateTax, calculate-delayed-arrival-time:findDelayedArrivalTime, calculate-digit-sum-of-a-string:digitSum, calculate-money-in-leetcode-bank:totalMoney, camelcase-matching:camelMatch, can-convert-string-in-k-moves:canConvertString, can-i-win:canIWin, can-make-arithmetic-progression-from-sequence:canMakeArithmeticProgression, can-make-palindrome-from-substring:canMakePaliQueries, can-place-flowers:canPlaceFlowers, can-you-eat-your-favorite-candy-on-your-favorite-day:canEat, candy:candy, capacity-to-ship-packages-within-d-days:shipWithinDays, capitalize-the-title:capitalizeTitle, car-fleet:carFleet, car-fleet-ii:getCollisionTimes, car-pooling:carPooling, card-flipping-game:flipgame, cat-and-mouse:catMouseGame, cat-and-mouse-ii:canMouseWin, categorize-box-according-to-criteria:categorizeBox, cells-in-a-range-on-an-excel-sheet:cellsInRange, cells-with-odd-values-in-a-matrix:oddCells, chalkboard-xor-game:xorGame, champagne-tower:champagneTower, change-minimum-characters-to-satisfy-one-of-three-conditions:minCharacters, cheapest-flights-within-k-stops:findCheapestPrice, check-array-formation-through-concatenation:canFormArray, check-balanced-string:isBalanced, check-completeness-of-a-binary-tree:isCompleteTree, check-distances-between-same-letters:checkDistances, check-if-a-parentheses-string-can-be-valid:canBeValid, check-if-a-string-can-break-another-string:checkIfCanBreak, check-if-a-string-contains-all-binary-codes-of-size-k:hasAllCodes, check-if-a-string-is-an-acronym-of-words:isAcronym, check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence:isPrefixOfWord, check-if-all-1s-are-at-least-length-k-places-away:kLengthApart, check-if-all-as-appears-before-all-bs:checkString, check-if-all-characters-have-equal-number-of-occurrences:areOccurrencesEqual, check-if-all-the-integers-in-a-range-are-covered:isCovered, check-if-an-original-string-exists-given-two-encoded-strings:possiblyEquals, check-if-array-is-good:isGood, check-if-array-is-sorted-and-rotated:check, check-if-array-pairs-are-divisible-by-k:canArrange, check-if-binary-string-has-at-most-one-segment-of-ones:checkOnesSegment, check-if-bitwise-or-has-trailing-zeros:hasTrailingZeros, check-if-dfs-strings-are-palindromes:findAnswer, check-if-every-row-and-column-contains-all-numbers:checkValid, check-if-grid-can-be-cut-into-sections:checkValidCuts, check-if-grid-satisfies-conditions:satisfiesConditions, check-if-it-is-a-good-array:isGoodArray, check-if-it-is-a-straight-line:checkStraightLine, check-if-it-is-possible-to-split-array:canSplitArray, check-if-matrix-is-x-matrix:checkXMatrix, check-if-move-is-legal:checkMove, check-if-n-and-its-double-exist:checkIfExist, check-if-number-has-equal-digit-count-and-digit-value:digitCount, check-if-number-is-a-sum-of-powers-of-three:checkPowersOfThree, check-if-numbers-are-ascending-in-a-sentence:areNumbersAscending, check-if-one-string-swap-can-make-strings-equal:areAlmostEqual, check-if-point-is-reachable:isReachable, check-if-string-is-a-prefix-of-array:isPrefixString, check-if-string-is-transformable-with-substring-sort-operations:isTransformable, check-if-strings-can-be-made-equal-with-operations-i:canBeEqual, check-if-strings-can-be-made-equal-with-operations-ii:checkStrings, check-if-the-number-is-fascinating:isFascinating, check-if-the-rectangle-corner-is-reachable:canReachCorner, check-if-the-sentence-is-pangram:checkIfPangram, check-if-there-is-a-valid-parentheses-string-path:hasValidPath, check-if-there-is-a-valid-partition-for-the-array:validPartition, check-if-there-is-a-valid-path-in-a-grid:hasValidPath, check-if-two-chessboard-squares-have-the-same-color:checkTwoChessboards, check-if-two-string-arrays-are-equivalent:arrayStringsAreEqual, check-if-word-can-be-placed-in-crossword:placeWordInCrossword, check-if-word-equals-summation-of-two-words:isSumEqual, check-if-word-is-valid-after-substitutions:isValid, check-knight-tour-configuration:checkValidGrid, check-whether-two-strings-are-almost-equivalent:checkAlmostEquivalent, checking-existence-of-edge-length-limited-paths:distanceLimitedPathsExist, cherry-pickup:cherryPickup, cherry-pickup-ii:cherryPickup, cinema-seat-allocation:maxNumberOfFamilies, circle-and-rectangle-overlapping:checkOverlap, circular-array-loop:circularArrayLoop, circular-permutation-in-binary-representation:circularPermutation, circular-sentence:isCircularSentence, clear-digits:clearDigits, climbing-stairs:climbStairs, closest-dessert-cost:closestCost, closest-divisors:closestDivisors, closest-nodes-queries-in-a-binary-search-tree:closestNodes, closest-prime-numbers-in-range:closestPrimes, closest-room:closestRoom, closest-subsequence-sum:minAbsDifference, clumsy-factorial:clumsy, coin-change:coinChange, coin-change-ii:change, collect-coins-in-a-tree:collectTheCoins, collecting-chocolates:minCost, coloring-a-border:colorBorder, combination-sum:combinationSum, combination-sum-ii:combinationSum2, combination-sum-iii:combinationSum3, combination-sum-iv:combinationSum4, combinations:combine, compare-strings-by-frequency-of-the-smallest-character:numSmallerByFrequency, compare-version-numbers:compareVersion, complement-of-base-10-integer:bitwiseComplement, complete-binary-tree-inserter:CBTInserter, complex-number-multiplication:complexNumberMultiply, concatenated-words:findAllConcatenatedWordsInADict, concatenation-of-array:getConcatenation, concatenation-of-consecutive-binary-numbers:concatenatedBinary, consecutive-characters:maxPower, consecutive-numbers-sum:consecutiveNumbersSum, constrained-subsequence-sum:constrainedSubsetSum, construct-2d-grid-matching-graph-layout:constructGridLayout, construct-binary-search-tree-from-preorder-traversal:bstFromPreorder, construct-binary-tree-from-inorder-and-postorder-traversal:buildTree, construct-binary-tree-from-preorder-and-inorder-traversal:buildTree, construct-binary-tree-from-preorder-and-postorder-traversal:constructFromPrePost, construct-k-palindrome-strings:canConstruct, construct-product-matrix:constructProductMatrix, construct-smallest-number-from-di-string:smallestNumber, construct-string-from-binary-tree:tree2str, construct-string-with-minimum-cost:minimumCost, construct-string-with-repeat-limit:repeatLimitedString, construct-target-array-with-multiple-sums:isPossible, construct-the-lexicographically-largest-valid-sequence:constructDistancedSequence, construct-the-longest-new-string:longestString, construct-the-minimum-bitwise-array-i:minBitwiseArray, construct-the-minimum-bitwise-array-ii:minBitwiseArray, construct-the-rectangle:constructRectangle, contain-virus:containVirus, container-with-most-water:maxArea, contains-duplicate:containsDuplicate, contains-duplicate-ii:containsNearbyDuplicate, contains-duplicate-iii:containsNearbyAlmostDuplicate, contiguous-array:findMaxLength, continuous-subarray-sum:checkSubarraySum, continuous-subarrays:continuousSubarrays, convert-1d-array-into-2d-array:construct2DArray, convert-a-number-to-hexadecimal:toHex, convert-an-array-into-a-2d-array-with-conditions:findMatrix, convert-binary-number-in-a-linked-list-to-integer:getDecimalValue, convert-bst-to-greater-tree:convertBST, convert-date-to-binary:convertDateToBinary, convert-integer-to-the-sum-of-two-no-zero-integers:getNoZeroIntegers, convert-sorted-array-to-binary-search-tree:sortedArrayToBST, convert-sorted-list-to-binary-search-tree:sortedListToBST, convert-the-temperature:convertTemperature, convert-to-base-2:baseNeg2, coordinate-with-maximum-network-quality:bestCoordinate, corporate-flight-bookings:corpFlightBookings, count-all-possible-routes:countRoutes, count-all-valid-pickup-and-delivery-options:countOrders, count-almost-equal-pairs-i:countPairs, count-almost-equal-pairs-ii:countPairs, count-alternating-subarrays:countAlternatingSubarrays, count-anagrams:countAnagrams, count-and-say:countAndSay, count-array-pairs-divisible-by-k:countPairs, count-artifacts-that-can-be-extracted:digArtifacts, count-asterisks:countAsterisks, count-beautiful-splits-in-an-array:beautifulSplits, count-beautiful-substrings-i:beautifulSubstrings, count-beautiful-substrings-ii:beautifulSubstrings, count-binary-substrings:countBinarySubstrings, count-collisions-of-monkeys-on-a-polygon:monkeyMove, count-collisions-on-a-road:countCollisions, count-common-words-with-one-occurrence:countWords, count-complete-subarrays-in-an-array:countCompleteSubarrays, count-complete-substrings:countCompleteSubstrings, count-complete-tree-nodes:countNodes, count-connected-components-in-lcm-graph:countComponents, count-days-spent-together:countDaysTogether, count-days-without-meetings:countDays, count-different-palindromic-subsequences:countPalindromicSubsequences, count-distinct-numbers-on-board:distinctIntegers, count-elements-with-maximum-frequency:maxFrequencyElements, count-elements-with-strictly-smaller-and-greater-elements:countElements, count-equal-and-divisible-pairs-in-an-array:countPairs, count-fertile-pyramids-in-a-land:countPyramids, count-good-meals:countPairs, count-good-nodes-in-binary-tree:goodNodes, count-good-numbers:countGoodNumbers, count-good-triplets:countGoodTriplets, count-good-triplets-in-an-array:goodTriplets, count-hills-and-valleys-in-an-array:countHillValley, count-increasing-quadruplets:countQuadruplets, count-integers-in-intervals:CountIntervals, count-integers-with-even-digit-sum:countEven, count-items-matching-a-rule:countMatches, count-k-reducible-numbers-less-than-n:countKReducibleNumbers, count-k-subsequences-of-a-string-with-maximum-beauty:countKSubsequencesWithMaxBeauty, count-largest-group:countLargestGroup, count-lattice-points-inside-a-circle:countLatticePoints, count-negative-numbers-in-a-sorted-matrix:countNegatives, count-nice-pairs-in-an-array:countNicePairs, count-nodes-with-the-highest-score:countHighestScoreNodes, count-non-decreasing-subarrays-after-k-operations:countNonDecreasingSubarrays, count-number-of-bad-pairs:countBadPairs, count-number-of-balanced-permutations:countBalancedPermutations, count-number-of-distinct-integers-after-reverse-operations:countDistinctIntegers, count-number-of-homogenous-substrings:countHomogenous, count-number-of-maximum-bitwise-or-subsets:countMaxOrSubsets, count-number-of-nice-subarrays:numberOfSubarrays, count-number-of-pairs-with-absolute-difference-k:countKDifference, count-number-of-possible-root-nodes:rootCount, count-number-of-rectangles-containing-each-point:countRectangles, count-number-of-special-subsequences:countSpecialSubsequences, count-number-of-teams:numTeams, count-number-of-texts:countTexts, count-number-of-ways-to-place-houses:countHousePlacements, count-numbers-with-unique-digits:countNumbersWithUniqueDigits, count-odd-numbers-in-an-interval-range:countOdds, count-of-integers:count, count-of-interesting-subarrays:countInterestingSubarrays, count-of-matches-in-tournament:numberOfMatches, count-of-range-sum:countRangeSum, count-of-smaller-numbers-after-self:countSmaller, count-of-sub-multisets-with-bounded-sum:countSubMultisets, count-of-substrings-containing-every-vowel-and-k-consonants-i:countOfSubstrings, count-of-substrings-containing-every-vowel-and-k-consonants-ii:countOfSubstrings, count-operations-to-obtain-zero:countOperations, count-pairs-of-connectable-servers-in-a-weighted-tree-network:countPairsOfConnectableServers, count-pairs-of-nodes:countPairs, count-pairs-of-points-with-distance-k:countPairs, count-pairs-of-similar-strings:similarPairs, count-pairs-that-form-a-complete-day-i:countCompleteDayPairs, count-pairs-that-form-a-complete-day-ii:countCompleteDayPairs, count-pairs-whose-sum-is-less-than-target:countPairs, count-pairs-with-xor-in-a-range:countPairs, count-palindromic-subsequences:countPalindromes, count-paths-that-can-form-a-palindrome-in-a-tree:countPalindromePaths, count-paths-with-the-given-xor-value:countPathsWithXorValue, count-prefix-and-suffix-pairs-i:countPrefixSuffixPairs, count-prefix-and-suffix-pairs-ii:countPrefixSuffixPairs, count-prefixes-of-a-given-string:countPrefixes, count-primes:countPrimes, count-servers-that-communicate:countServers, count-sorted-vowel-strings:countVowelStrings, count-special-integers:countSpecialNumbers, count-special-quadruplets:countQuadruplets, count-special-subsequences:numberOfSubsequences, count-square-submatrices-with-all-ones:countSquares, count-square-sum-triples:countTriples, count-stepping-numbers-in-range:countSteppingNumbers, count-sub-islands:countSubIslands, count-subarrays-of-length-three-with-a-condition:countSubarrays, count-subarrays-where-max-element-appears-at-least-k-times:countSubarrays, count-subarrays-with-fixed-bounds:countSubarrays, count-subarrays-with-median-k:countSubarrays, count-subarrays-with-score-less-than-k:countSubarrays, count-submatrices-with-all-ones:numSubmat, count-submatrices-with-equal-frequency-of-x-and-y:numberOfSubmatrices, count-submatrices-with-top-left-element-and-sum-less-than-k:countSubmatrices, count-substrings-starting-and-ending-with-given-character:countSubstrings, count-substrings-that-can-be-rearranged-to-contain-a-string-i:validSubstringCount, count-substrings-that-can-be-rearranged-to-contain-a-string-ii:validSubstringCount, count-substrings-that-differ-by-one-character:countSubstrings, count-substrings-that-satisfy-k-constraint-i:countKConstraintSubstrings, count-substrings-that-satisfy-k-constraint-ii:countKConstraintSubstrings, count-substrings-with-k-frequency-characters-i:numberOfSubstrings, count-subtrees-with-max-distance-between-cities:countSubgraphsForEachDiameter, count-symmetric-integers:countSymmetricIntegers, count-tested-devices-after-test-operations:countTestedDevices, count-the-digits-that-divide-a-number:countDigits, count-the-hidden-sequences:numberOfArrays, count-the-number-of-arrays-with-k-matching-adjacent-elements:countGoodArrays, count-the-number-of-beautiful-subarrays:beautifulSubarrays, count-the-number-of-complete-components:countCompleteComponents, count-the-number-of-consistent-strings:countConsistentStrings, count-the-number-of-fair-pairs:countFairPairs, count-the-number-of-good-nodes:countGoodNodes, count-the-number-of-good-partitions:numberOfGoodPartitions, count-the-number-of-good-subarrays:countGood, count-the-number-of-houses-at-a-certain-distance-i:countOfPairs, count-the-number-of-houses-at-a-certain-distance-ii:countOfPairs, count-the-number-of-ideal-arrays:idealArrays, count-the-number-of-incremovable-subarrays-i:incremovableSubarrayCount, count-the-number-of-incremovable-subarrays-ii:incremovableSubarrayCount, count-the-number-of-infection-sequences:numberOfSequence, count-the-number-of-inversions:numberOfPermutations, count-the-number-of-powerful-integers:numberOfPowerfulInt, count-the-number-of-special-characters-i:numberOfSpecialChars, count-the-number-of-special-characters-ii:numberOfSpecialChars, count-the-number-of-square-free-subsets:squareFreeSubsets, count-the-number-of-substrings-with-dominant-ones:numberOfSubstrings, count-the-number-of-vowel-strings-in-range:vowelStrings, count-the-number-of-winning-sequences:countWinningSequences, count-the-repetitions:getMaxRepetitions, count-total-number-of-colored-cells:coloredCells, count-triplets-that-can-form-two-arrays-of-equal-xor:countTriplets, count-unguarded-cells-in-the-grid:countUnguarded, count-unhappy-friends:unhappyFriends, count-unique-characters-of-all-substrings-of-a-given-string:uniqueLetterString, count-unreachable-pairs-of-nodes-in-an-undirected-graph:countPairs, count-valid-paths-in-a-tree:countPaths, count-visited-nodes-in-a-directed-graph:countVisitedNodes, count-vowel-strings-in-ranges:vowelStrings, count-vowel-substrings-of-a-string:countVowelSubstrings, count-vowels-permutation:countVowelPermutation, count-ways-to-build-good-strings:countGoodStrings, count-ways-to-build-rooms-in-an-ant-colony:waysToBuildRooms, count-ways-to-group-overlapping-ranges:countWays, count-ways-to-make-array-with-product:waysToFillArray, count-words-obtained-after-adding-a-letter:wordCount, count-zero-request-servers:countServers, counting-bits:countBits, counting-words-with-a-given-prefix:prefixCount, couples-holding-hands:minSwapsCouples, course-schedule:canFinish, course-schedule-ii:findOrder, course-schedule-iii:scheduleCourse, course-schedule-iv:checkIfPrerequisite, cousins-in-binary-tree:isCousins, cousins-in-binary-tree-ii:replaceValueInTree, cracking-the-safe:crackSafe, crawler-log-folder:minOperations, create-binary-tree-from-descriptions:createBinaryTree, create-components-with-same-value:componentValue, create-maximum-number:maxNumber, create-sorted-array-through-instructions:createSortedArray, create-target-array-in-the-given-order:createTargetArray, critical-connections-in-a-network:criticalConnections, custom-sort-string:customSortString, cut-off-trees-for-golf-event:cutOffTree, cycle-length-queries-in-a-tree:cycleLengthQueries, cyclically-rotating-a-grid:rotateGrid, daily-temperatures:dailyTemperatures, data-stream-as-disjoint-intervals:SummaryRanges, day-of-the-week:dayOfTheWeek, day-of-the-year:dayOfYear, decode-string:decodeString, decode-the-message:decodeMessage, decode-the-slanted-ciphertext:decodeCiphertext, decode-ways:numDecodings, decode-ways-ii:numDecodings, decode-xored-array:decode, decode-xored-permutation:decode, decoded-string-at-index:decodeAtIndex, decompress-run-length-encoded-list:decompressRLElist, decrease-elements-to-make-array-zigzag:movesToMakeZigzag, decremental-string-concatenation:minimizeConcatenatedLength, decrypt-string-from-alphabet-to-integer-mapping:freqAlphabets, deepest-leaves-sum:deepestLeavesSum, defanging-an-ip-address:defangIPaddr, defuse-the-bomb:decrypt, degree-of-an-array:findShortestSubArray, delete-and-earn:deleteAndEarn, delete-characters-to-make-fancy-string:makeFancyString, delete-columns-to-make-sorted:minDeletionSize, delete-columns-to-make-sorted-ii:minDeletionSize, delete-columns-to-make-sorted-iii:minDeletionSize, delete-duplicate-folders-in-system:deleteDuplicateFolder, delete-greatest-value-in-each-row:deleteGreatestValue, delete-leaves-with-a-given-value:removeLeafNodes, delete-node-in-a-bst:deleteNode, delete-nodes-from-linked-list-present-in-array:modifiedList, delete-operation-for-two-strings:minDistance, delete-the-middle-node-of-a-linked-list:deleteMiddle, delivering-boxes-from-storage-to-ports:boxDelivering, describe-the-painting:splitPainting, design-a-food-rating-system:FoodRatings, design-a-number-container-system:NumberContainers, design-a-stack-with-increment-operation:CustomStack, design-a-text-editor:TextEditor, design-add-and-search-words-data-structure:WordDictionary, design-an-atm-machine:ATM, design-an-ordered-stream:OrderedStream, design-authentication-manager:AuthenticationManager, design-bitset:Bitset, design-browser-history:BrowserHistory, design-circular-deque:MyCircularDeque, design-circular-queue:MyCircularQueue, design-front-middle-back-queue:FrontMiddleBackQueue, design-graph-with-shortest-path-calculator:Graph, design-hashmap:MyHashMap, design-hashset:MyHashSet, design-linked-list:MyLinkedList, design-memory-allocator:Allocator, design-movie-rental-system:MovieRentingSystem, design-neighbor-sum-service:NeighborSum, design-parking-system:ParkingSystem, design-skiplist:Skiplist, design-task-manager:TaskManager, design-twitter:Twitter, design-underground-system:UndergroundSystem, destination-city:destCity, destroy-sequential-targets:destroyTargets, destroying-asteroids:asteroidsDestroyed, detect-capital:detectCapitalUse, detect-cycles-in-2d-grid:containsCycle, detect-pattern-of-length-m-repeated-k-or-more-times:containsPattern, detect-squares:DetectSquares, determine-color-of-a-chessboard-square:squareIsWhite, determine-if-a-cell-is-reachable-at-a-given-time:isReachableAtTime, determine-if-string-halves-are-alike:halvesAreAlike, determine-if-two-events-have-conflict:haveConflict, determine-if-two-strings-are-close:closeStrings, determine-the-minimum-sum-of-a-k-avoiding-array:minimumSum, determine-the-winner-of-a-bowling-game:isWinner, determine-whether-matrix-can-be-obtained-by-rotation:findRotation, detonate-the-maximum-bombs:maximumDetonation, di-string-match:diStringMatch, diagonal-traverse:findDiagonalOrder, diagonal-traverse-ii:findDiagonalOrder, diameter-of-binary-tree:diameterOfBinaryTree, dice-roll-simulation:dieSimulator, difference-between-element-sum-and-digit-sum-of-an-array:differenceOfSum, difference-between-maximum-and-minimum-price-sum:maxOutput, difference-between-ones-and-zeros-in-row-and-column:onesMinusZeros, difference-of-number-of-distinct-values-on-diagonals:differenceOfDistinctValues, different-ways-to-add-parentheses:diffWaysToCompute, digit-operations-to-make-two-integers-equal:minOperations, dinner-plate-stacks:DinnerPlates, disconnect-path-in-a-binary-matrix-by-at-most-one-flip:isPossibleToCutPath, display-table-of-food-orders-in-a-restaurant:displayTable, distance-between-bus-stops:distanceBetweenBusStops, distant-barcodes:rearrangeBarcodes, distinct-echo-substrings:distinctEchoSubstrings, distinct-prime-factors-of-product-of-array:distinctPrimeFactors, distinct-subsequences:numDistinct, distinct-subsequences-ii:distinctSubseqII, distribute-candies:distributeCandies, distribute-candies-among-children-i:distributeCandies, distribute-candies-among-children-ii:distributeCandies, distribute-candies-to-people:distributeCandies, distribute-coins-in-binary-tree:distributeCoins, distribute-elements-into-two-arrays-i:resultArray, distribute-elements-into-two-arrays-ii:resultArray, distribute-money-to-maximum-children:distMoney, distribute-repeating-integers:canDistribute, divide-a-string-into-groups-of-size-k:divideString, divide-an-array-into-subarrays-with-minimum-cost-i:minimumCost, divide-an-array-into-subarrays-with-minimum-cost-ii:minimumCost, divide-array-in-sets-of-k-consecutive-numbers:isPossibleDivide, divide-array-into-arrays-with-max-difference:divideArray, divide-array-into-equal-pairs:divideArray, divide-intervals-into-minimum-number-of-groups:minGroups, divide-nodes-into-the-maximum-number-of-groups:magnificentSets, divide-players-into-teams-of-equal-skill:dividePlayers, divide-two-integers:divide, divisible-and-non-divisible-sums-difference:differenceOfSums, divisor-game:divisorGame, domino-and-tromino-tiling:numTilings, dota2-senate:predictPartyVictory, double-a-number-represented-as-a-linked-list:doubleIt, double-modular-exponentiation:getGoodIndices, dungeon-game:calculateMinimumHP, duplicate-zeros:duplicateZeros, earliest-possible-day-of-full-bloom:earliestFullBloom, earliest-second-to-mark-indices-i:earliestSecondToMarkIndices, earliest-second-to-mark-indices-ii:earliestSecondToMarkIndices, edit-distance:minDistance, egg-drop-with-2-eggs-and-n-floors:twoEggDrop, element-appearing-more-than-25-in-sorted-array:findSpecialInteger, eliminate-maximum-number-of-monsters:eliminateMaximum, elimination-game:lastRemaining, encrypt-and-decrypt-strings:Encrypter, equal-rational-numbers:isRationalEqual, equal-row-and-column-pairs:equalPairs, equal-sum-arrays-with-minimum-number-of-operations:minOperations, erect-the-fence:outerTrees, escape-a-large-maze:isEscapePossible, escape-the-ghosts:escapeGhosts, escape-the-spreading-fire:maximumMinutes, evaluate-boolean-binary-tree:evaluateTree, evaluate-division:calcEquation, evaluate-reverse-polish-notation:evalRPN, evaluate-the-bracket-pairs-of-a-string:evaluate, even-odd-tree:isEvenOddTree, exam-room:ExamRoom, excel-sheet-column-number:titleToNumber, excel-sheet-column-title:convertToTitle, exclusive-time-of-functions:exclusiveTime, execution-of-all-suffix-instructions-staying-in-a-grid:executeInstructions, existence-of-a-substring-in-a-string-and-its-reverse:isSubstringPresent, expression-add-operators:addOperators, expressive-words:expressiveWords, extra-characters-in-a-string:minExtraChar, factorial-trailing-zeroes:trailingZeroes, fair-candy-swap:fairCandySwap, fair-distribution-of-cookies:distributeCookies, falling-squares:fallingSquares, fancy-sequence:Fancy, faulty-keyboard:finalString, fibonacci-number:fib, filling-bookcase-shelves:minHeightShelves, filter-restaurants-by-vegan-friendly-price-and-distance:filterRestaurants, final-array-state-after-k-multiplication-operations-i:getFinalState, final-array-state-after-k-multiplication-operations-ii:getFinalState, final-prices-with-a-special-discount-in-a-shop:finalPrices, final-value-of-variable-after-performing-operations:finalValueAfterOperations, find-a-good-subset-of-the-matrix:goodSubsetofBinaryMatrix, find-a-peak-element-ii:findPeakGrid, find-a-safe-walk-through-a-grid:findSafeWalk, find-a-value-of-a-mysterious-function-closest-to-target:closestToTarget, find-all-anagrams-in-a-string:findAnagrams, find-all-duplicates-in-an-array:findDuplicates, find-all-good-indices:goodIndices, find-all-good-strings:findGoodStrings, find-all-groups-of-farmland:findFarmland, find-all-k-distant-indices-in-an-array:findKDistantIndices, find-all-lonely-numbers-in-the-array:findLonely, find-all-numbers-disappeared-in-an-array:findDisappearedNumbers, find-all-people-with-secret:findAllPeople, find-all-possible-recipes-from-given-supplies:findAllRecipes, find-all-possible-stable-binary-arrays-i:numberOfStableArrays, find-all-possible-stable-binary-arrays-ii:numberOfStableArrays, find-and-replace-in-string:findReplaceString, find-and-replace-pattern:findAndReplacePattern, find-array-given-subset-sums:recoverArray, find-beautiful-indices-in-the-given-array-i:beautifulIndices, find-beautiful-indices-in-the-given-array-ii:beautifulIndices, find-bottom-left-tree-value:findBottomLeftValue, find-building-where-alice-and-bob-can-meet:leftmostBuildingQueries, find-center-of-star-graph:findCenter, find-champion-i:findChampion, find-champion-ii:findChampion, find-closest-node-to-given-two-nodes:closestMeetingNode, find-closest-number-to-zero:findClosestNumber, find-common-characters:commonChars, find-common-elements-between-two-arrays:findIntersectionValues, find-consecutive-integers-from-a-data-stream:DataStream, find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree:findCriticalAndPseudoCriticalEdges, find-duplicate-file-in-system:findDuplicate, find-duplicate-subtrees:findDuplicateSubtrees, find-edges-in-shortest-paths:findAnswer, find-elements-in-a-contaminated-binary-tree:FindElements, find-eventual-safe-states:eventualSafeNodes, find-first-and-last-position-of-element-in-sorted-array:searchRange, find-first-palindromic-string-in-the-array:firstPalindrome, find-good-days-to-rob-the-bank:goodDaysToRobBank, find-greatest-common-divisor-of-array:findGCD, find-if-array-can-be-sorted:canSortArray, find-if-digit-game-can-be-won:canAliceWin, find-if-path-exists-in-graph:validPath, find-indices-of-stable-mountains:stableMountains, find-indices-with-index-and-value-difference-i:findIndices, find-indices-with-index-and-value-difference-ii:findIndices, find-k-closest-elements:findClosestElements, find-k-pairs-with-smallest-sums:kSmallestPairs, find-k-th-smallest-pair-distance:smallestDistancePair, find-kth-bit-in-nth-binary-string:findKthBit, find-kth-largest-xor-coordinate-value:kthLargestValue, find-largest-value-in-each-tree-row:largestValues, find-latest-group-of-size-m:findLatestStep, find-longest-awesome-substring:longestAwesome, find-longest-special-substring-that-occurs-thrice-i:maximumLength, find-longest-special-substring-that-occurs-thrice-ii:maximumLength, find-lucky-integer-in-an-array:findLucky, find-maximum-non-decreasing-array-length:findMaximumLength, find-maximum-number-of-string-pairs:maximumNumberOfStringPairs, find-maximum-removals-from-source-string:maxRemovals, find-median-from-data-stream:MedianFinder, find-minimum-diameter-after-merging-two-trees:minimumDiameterAfterMerge, find-minimum-in-rotated-sorted-array:findMin, find-minimum-in-rotated-sorted-array-ii:findMin, find-minimum-operations-to-make-all-elements-divisible-by-three:minimumOperations, find-minimum-time-to-finish-all-jobs:minimumTimeRequired, find-minimum-time-to-reach-last-room-i:minTimeToReach, find-minimum-time-to-reach-last-room-ii:minTimeToReach, find-mirror-score-of-a-string:calculateScore, find-missing-and-repeated-values:findMissingAndRepeatedValues, find-missing-observations:missingRolls, find-mode-in-binary-search-tree:findMode, find-n-unique-integers-sum-up-to-zero:sumZero, find-nearest-point-that-has-the-same-x-or-y-coordinate:nearestValidPoint, find-number-of-coins-to-place-in-tree-nodes:placedCoins, find-number-of-ways-to-reach-the-k-th-stair:waysToReachStair, find-numbers-with-even-number-of-digits:findNumbers, find-occurrences-of-an-element-in-an-array:occurrencesOfElement, find-original-array-from-doubled-array:findOriginalArray, find-palindrome-with-fixed-length:kthPalindrome, find-peak-element:findPeakElement, find-pivot-index:pivotIndex, find-players-with-zero-or-one-losses:findWinners, find-polygon-with-the-largest-perimeter:largestPerimeter, find-products-of-elements-of-big-array:findProductsOfElements, find-resultant-array-after-removing-anagrams:removeAnagrams, find-right-interval:findRightInterval, find-score-of-an-array-after-marking-all-elements:findScore, find-servers-that-handled-most-number-of-requests:busiestServers, find-smallest-letter-greater-than-target:nextGreatestLetter, find-subarray-with-bitwise-or-closest-to-k:minimumDifference, find-subarrays-with-equal-sum:findSubarrays, find-subsequence-of-length-k-with-the-largest-sum:maxSubsequence, find-substring-with-given-hash-value:subStrHash, find-subtree-sizes-after-changes:findSubtreeSizes, find-target-indices-after-sorting-array:targetIndices, find-the-array-concatenation-value:findTheArrayConcVal, find-the-child-who-has-the-ball-after-k-seconds:numberOfChild, find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance:findTheCity, find-the-closest-palindrome:nearestPalindromic, find-the-count-of-good-integers:countGoodIntegers, find-the-count-of-monotonic-pairs-i:countOfPairs, find-the-count-of-monotonic-pairs-ii:countOfPairs, find-the-count-of-numbers-which-are-not-special:nonSpecialCount, find-the-difference:findTheDifference, find-the-difference-of-two-arrays:findDifference, find-the-distance-value-between-two-arrays:findTheDistanceValue, find-the-distinct-difference-array:distinctDifferenceArray, find-the-divisibility-array-of-a-string:divisibilityArray, find-the-duplicate-number:findDuplicate, find-the-encrypted-string:getEncryptedString, find-the-first-player-to-win-k-games-in-a-row:findWinningPlayer, find-the-grid-of-region-average:resultGrid, find-the-highest-altitude:largestAltitude, find-the-index-of-the-first-occurrence-in-a-string:strStr, find-the-integer-added-to-array-i:addedInteger, find-the-integer-added-to-array-ii:minimumAddedInteger, find-the-k-beauty-of-a-number:divisorSubstrings, find-the-k-or-of-an-array:findKOr, find-the-k-sum-of-an-array:kSum, find-the-k-th-character-in-string-game-i:kthCharacter, find-the-k-th-character-in-string-game-ii:kthCharacter, find-the-key-of-the-numbers:generateKey, find-the-kth-largest-integer-in-the-array:kthLargestNumber, find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows:kthSmallest, find-the-largest-area-of-square-inside-two-rectangles:largestSquareArea, find-the-largest-palindrome-divisible-by-k:largestPalindrome, find-the-length-of-the-longest-common-prefix:longestCommonPrefix, find-the-lexicographically-largest-string-from-the-box-i:answerString, find-the-lexicographically-smallest-valid-sequence:validSequence, find-the-longest-balanced-substring-of-a-binary-string:findTheLongestBalancedSubstring, find-the-longest-equal-subarray:longestEqualSubarray, find-the-longest-semi-repetitive-substring:longestSemiRepetitiveSubstring, find-the-longest-substring-containing-vowels-in-even-counts:findTheLongestSubstring, find-the-longest-valid-obstacle-course-at-each-position:longestObstacleCourseAtEachPosition, find-the-losers-of-the-circular-game:circularGameLosers, find-the-maximum-achievable-number:theMaximumAchievableX, find-the-maximum-divisibility-score:maxDivScore, find-the-maximum-factor-score-of-array:maxScore, find-the-maximum-length-of-a-good-subsequence-i:maximumLength, find-the-maximum-length-of-a-good-subsequence-ii:maximumLength, find-the-maximum-length-of-valid-subsequence-i:maximumLength, find-the-maximum-length-of-valid-subsequence-ii:maximumLength, find-the-maximum-number-of-elements-in-subset:maximumLength, find-the-maximum-number-of-fruits-collected:maxCollectedFruits, find-the-maximum-number-of-marked-indices:maxNumOfMarkedIndices, find-the-maximum-sequence-value-of-array:maxValue, find-the-maximum-sum-of-node-values:maximumValueSum, find-the-median-of-the-uniqueness-array:medianOfUniquenessArray, find-the-middle-index-in-array:findMiddleIndex, find-the-minimum-and-maximum-number-of-nodes-between-critical-points:nodesBetweenCriticalPoints, find-the-minimum-area-to-cover-all-ones-i:minimumArea, find-the-minimum-area-to-cover-all-ones-ii:minimumSum, find-the-minimum-cost-array-permutation:findPermutation, find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k:findMinFibonacciNumbers, find-the-minimum-possible-sum-of-a-beautiful-array:minimumPossibleSum, find-the-most-competitive-subsequence:mostCompetitive, find-the-n-th-value-after-k-seconds:valueAfterKSeconds, find-the-number-of-distinct-colors-among-the-balls:queryResults, find-the-number-of-good-pairs-i:numberOfPairs, find-the-number-of-good-pairs-ii:numberOfPairs, find-the-number-of-possible-ways-for-an-event:numberOfWays, find-the-number-of-subarrays-where-boundary-elements-are-maximum:numberOfSubarrays, find-the-number-of-subsequences-with-equal-gcd:subsequencePairCount, find-the-number-of-ways-to-place-people-i:numberOfPairs, find-the-number-of-ways-to-place-people-ii:numberOfPairs, find-the-number-of-winning-players:winningPlayerCount, find-the-occurrence-of-first-almost-equal-substring:minStartingIndex, find-the-original-array-of-prefix-xor:findArray, find-the-original-typed-string-i:possibleStringCount, find-the-original-typed-string-ii:possibleStringCount, find-the-peaks:findPeaks, find-the-pivot-integer:pivotInteger, find-the-power-of-k-size-subarrays-i:resultsArray, find-the-power-of-k-size-subarrays-ii:resultsArray, find-the-prefix-common-array-of-two-arrays:findThePrefixCommonArray, find-the-punishment-number-of-an-integer:punishmentNumber, find-the-safest-path-in-a-grid:maximumSafenessFactor, find-the-score-of-all-prefixes-of-an-array:findPrefixScore, find-the-sequence-of-strings-appeared-on-the-screen:stringSequence, find-the-shortest-superstring:shortestSuperstring, find-the-smallest-divisor-given-a-threshold:smallestDivisor, find-the-string-with-lcp:findTheString, find-the-student-that-will-replace-the-chalk:chalkReplacer, find-the-substring-with-maximum-cost:maximumCostSubstring, find-the-sum-of-encrypted-integers:sumOfEncryptedInt, find-the-sum-of-subsequence-powers:sumOfPowers, find-the-sum-of-the-power-of-all-subsequences:sumOfPower, find-the-town-judge:findJudge, find-the-value-of-the-partition:findValueOfPartition, find-the-width-of-columns-of-a-grid:findColumnWidth, find-the-winner-of-an-array-game:getWinner, find-the-winner-of-the-circular-game:findTheWinner, find-the-winning-player-in-coin-game:winningPlayer, find-the-xor-of-numbers-which-appear-twice:duplicateNumbersXOR, find-three-consecutive-integers-that-sum-to-a-given-number:sumOfThree, find-triangular-sum-of-an-array:triangularSum, find-two-non-overlapping-sub-arrays-each-with-target-sum:minSumOfLengths, find-unique-binary-string:findDifferentBinaryString, find-valid-matrix-given-row-and-column-sums:restoreMatrix, find-winner-on-a-tic-tac-toe-game:tictactoe, find-words-containing-character:findWordsContaining, find-words-that-can-be-formed-by-characters:countCharacters, find-x-sum-of-all-k-long-subarrays-i:findXSum, find-x-sum-of-all-k-long-subarrays-ii:findXSum, find-xor-beauty-of-array:xorBeauty, find-xor-sum-of-all-pairs-bitwise-and:getXORSum, finding-3-digit-even-numbers:findEvenNumbers, finding-mk-average:MKAverage, finding-pairs-with-a-certain-sum:FindSumPairs, finding-the-users-active-minutes:findingUsersActiveMinutes, first-completely-painted-row-or-column:firstCompleteIndex, first-day-where-you-have-been-in-all-the-rooms:firstDayBeenInAllRooms, first-letter-to-appear-twice:repeatedCharacter, first-missing-positive:firstMissingPositive, first-unique-character-in-a-string:firstUniqChar, fizz-buzz:fizzBuzz, flatten-binary-tree-to-linked-list:flatten, flip-binary-tree-to-match-preorder-traversal:flipMatchVoyage, flip-columns-for-maximum-number-of-equal-rows:maxEqualRowsAfterFlips, flip-equivalent-binary-trees:flipEquiv, flip-string-to-monotone-increasing:minFlipsMonoIncr, flipping-an-image:flipAndInvertImage, flood-fill:floodFill, flower-planting-with-no-adjacent:gardenNoAdj, form-array-by-concatenating-subarrays-of-another-array:canChoose, form-largest-integer-with-digits-that-add-up-to-target:largestNumber, form-smallest-number-from-two-digit-arrays:minNumber, four-divisors:sumFourDivisors, fraction-addition-and-subtraction:fractionAddition, fraction-to-recurring-decimal:fractionToDecimal, freedom-trail:findRotateSteps, frequency-of-the-most-frequent-element:maxFrequency, frequency-tracker:FrequencyTracker, friends-of-appropriate-ages:numFriendRequests, frog-jump:canCross, frog-jump-ii:maxJump, frog-position-after-t-seconds:frogPosition, fruit-into-baskets:totalFruit, furthest-building-you-can-reach:furthestBuilding, furthest-point-from-origin:furthestDistanceFromOrigin, game-of-life:gameOfLife, gas-station:canCompleteCircuit, gcd-sort-of-an-array:gcdSort, generate-a-string-with-characters-that-have-odd-counts:generateTheString, generate-binary-strings-without-adjacent-zeros:validStrings, generate-parentheses:generateParenthesis, generate-random-point-in-a-circle:Solution, get-biggest-three-rhombus-sums-in-a-grid:getBiggestThree, get-equal-substrings-within-budget:equalSubstring, get-maximum-in-generated-array:getMaximumGenerated, get-the-maximum-score:maxSum, get-watched-videos-by-your-friends:watchedVideosByFriends, global-and-local-inversions:isIdealPermutation, goal-parser-interpretation:interpret, goat-latin:toGoatLatin, graph-connectivity-with-threshold:areConnected, gray-code:grayCode, greatest-common-divisor-of-strings:gcdOfStrings, greatest-common-divisor-traversal:canTraverseAllPairs, greatest-english-letter-in-upper-and-lower-case:greatestLetter, greatest-sum-divisible-by-three:maxSumDivThree, grid-game:gridGame, grid-illumination:gridIllumination, group-anagrams:groupAnagrams, group-the-people-given-the-group-size-they-belong-to:groupThePeople, groups-of-special-equivalent-strings:numSpecialEquivGroups, groups-of-strings:groupStrings, grumpy-bookstore-owner:maxSatisfied, guess-number-higher-or-lower-ii:getMoneyAmount, h-index:hIndex, h-index-ii:hIndex, hamming-distance:hammingDistance, hand-of-straights:isNStraightHand, handling-sum-queries-after-update:handleQuery, happy-number:isHappy, happy-students:countWays, harshad-number:sumOfTheDigitsOfHarshadNumber, hash-divided-string:stringHash, heaters:findRadius, height-checker:heightChecker, height-of-binary-tree-after-subtree-removal-queries:treeQueries, high-access-employees:findHighAccessEmployees, house-robber:rob, house-robber-ii:rob, house-robber-iii:rob, house-robber-iv:minCapability, how-many-numbers-are-smaller-than-the-current-number:smallerNumbersThanCurrent, html-entity-parser:entityParser, identify-the-largest-outlier-in-an-array:getLargestOutlier, image-overlap:largestOverlap, image-smoother:imageSmoother, implement-magic-dictionary:MagicDictionary, implement-queue-using-stacks:MyQueue, implement-stack-using-queues:MyStack, implement-trie-prefix-tree:Trie, increasing-decreasing-string:sortString, increasing-order-search-tree:increasingBST, increasing-triplet-subsequence:increasingTriplet, increment-submatrices-by-one:rangeAddQueries, incremental-memory-leak:memLeak, insert-delete-getrandom-o1:RandomizedSet, insert-delete-getrandom-o1-duplicates-allowed:RandomizedCollection, insert-greatest-common-divisors-in-linked-list:insertGreatestCommonDivisors, insert-interval:insert, insert-into-a-binary-search-tree:insertIntoBST, insertion-sort-list:insertionSortList, insufficient-nodes-in-root-to-leaf-paths:sufficientSubset, integer-break:integerBreak, integer-replacement:integerReplacement, integer-to-english-words:numberToWords, integer-to-roman:intToRoman, interleaving-string:isInterleave, intersection-of-multiple-arrays:intersection, intersection-of-two-arrays:intersection, intersection-of-two-arrays-ii:intersect, interval-list-intersections:intervalIntersection, intervals-between-identical-elements:getDistances, invalid-transactions:invalidTransactions, invert-binary-tree:invertTree, ipo:findMaximizedCapital, is-graph-bipartite:isBipartite, is-subsequence:isSubsequence, island-perimeter:islandPerimeter, isomorphic-strings:isIsomorphic, iterator-for-combination:CombinationIterator, jewels-and-stones:numJewelsInStones, jump-game:canJump, jump-game-ii:jump, jump-game-iii:canReach, jump-game-iv:minJumps, jump-game-v:maxJumps, jump-game-vi:maxResult, jump-game-vii:canReach, k-closest-points-to-origin:kClosest, k-concatenation-maximum-sum:kConcatenationMaxSum, k-diff-pairs-in-an-array:findPairs, k-divisible-elements-subarrays:countDistinct, k-highest-ranked-items-within-a-price-range:highestRankedKItems, k-inverse-pairs-array:kInversePairs, k-items-with-the-maximum-sum:kItemsWithMaximumSum, k-radius-subarray-averages:getAverages, k-similar-strings:kSimilarity, k-th-largest-perfect-subtree-size-in-binary-tree:kthLargestPerfectSubtree, k-th-nearest-obstacle-queries:resultsArray, k-th-smallest-in-lexicographical-order:findKthNumber, k-th-smallest-prime-fraction:kthSmallestPrimeFraction, k-th-symbol-in-grammar:kthGrammar, keep-multiplying-found-values-by-two:findFinalValue, keyboard-row:findWords, keys-and-rooms:canVisitAllRooms, kids-with-the-greatest-number-of-candies:kidsWithCandies, knight-dialer:knightDialer, knight-probability-in-chessboard:knightProbability, koko-eating-bananas:minEatingSpeed, kth-ancestor-of-a-tree-node:TreeAncestor, kth-distinct-string-in-an-array:kthDistinct, kth-largest-element-in-a-stream:KthLargest, kth-largest-element-in-an-array:findKthLargest, kth-largest-sum-in-a-binary-tree:kthLargestLevelSum, kth-missing-positive-number:findKthPositive, kth-smallest-amount-with-single-denomination-combination:findKthSmallest, kth-smallest-element-in-a-bst:kthSmallest, kth-smallest-element-in-a-sorted-matrix:kthSmallest, kth-smallest-instructions:kthSmallestPath, kth-smallest-number-in-multiplication-table:findKthNumber, kth-smallest-product-of-two-sorted-arrays:kthSmallestProduct, largest-1-bordered-square:largest1BorderedSquare, largest-3-same-digit-number-in-string:largestGoodInteger, largest-color-value-in-a-directed-graph:largestPathValue, largest-combination-with-bitwise-and-greater-than-zero:largestCombination, largest-component-size-by-common-factor:largestComponentSize, largest-divisible-subset:largestDivisibleSubset, largest-element-in-an-array-after-merge-operations:maxArrayValue, largest-local-values-in-a-matrix:largestLocal, largest-magic-square:largestMagicSquare, largest-merge-of-two-strings:largestMerge, largest-multiple-of-three:largestMultipleOfThree, largest-number:largestNumber, largest-number-after-digit-swaps-by-parity:largestInteger, largest-number-after-mutating-substring:maximumNumber, largest-number-at-least-twice-of-others:dominantIndex, largest-odd-number-in-string:largestOddNumber, largest-palindrome-product:largestPalindrome, largest-palindromic-number:largestPalindromic, largest-perimeter-triangle:largestPerimeter, largest-plus-sign:orderOfLargestPlusSign, largest-positive-integer-that-exists-with-its-negative:findMaxK, largest-rectangle-in-histogram:largestRectangleArea, largest-submatrix-with-rearrangements:largestSubmatrix, largest-substring-between-two-equal-characters:maxLengthBetweenEqualCharacters, largest-sum-of-averages:largestSumOfAverages, largest-time-for-given-digits:largestTimeFromDigits, largest-triangle-area:largestTriangleArea, largest-values-from-labels:largestValsFromLabels, last-day-where-you-can-still-cross:latestDayToCross, last-moment-before-all-ants-fall-out-of-a-plank:getLastMoment, last-stone-weight:lastStoneWeight, last-stone-weight-ii:lastStoneWeightII, last-substring-in-lexicographical-order:lastSubstring, last-visited-integers:lastVisitedIntegers, latest-time-by-replacing-hidden-digits:maximumTime, latest-time-you-can-obtain-after-replacing-characters:findLatestTime, leaf-similar-trees:leafSimilar, least-number-of-unique-integers-after-k-removals:findLeastNumOfUniqueInts, least-operators-to-express-number:leastOpsExpressTarget, left-and-right-sum-differences:leftRightDifference, lemonade-change:lemonadeChange, length-of-last-word:lengthOfLastWord, length-of-longest-fibonacci-subsequence:lenLongestFibSubseq, length-of-longest-subarray-with-at-most-k-frequency:maxSubarrayLength, length-of-the-longest-alphabetical-continuous-substring:longestContinuousSubstring, length-of-the-longest-increasing-path:maxPathLength, length-of-the-longest-subsequence-that-sums-to-target:lengthOfLongestSubsequence, length-of-the-longest-valid-substring:longestValidSubstring, letter-case-permutation:letterCasePermutation, letter-combinations-of-a-phone-number:letterCombinations, letter-tile-possibilities:numTilePossibilities, lexicographical-numbers:lexicalOrder, lexicographically-minimum-string-after-removing-stars:clearStars, lexicographically-smallest-beautiful-string:smallestBeautifulString, lexicographically-smallest-equivalent-string:smallestEquivalentString, lexicographically-smallest-palindrome:makeSmallestPalindrome, lexicographically-smallest-string-after-a-swap:getSmallestString, lexicographically-smallest-string-after-applying-operations:findLexSmallestString, lexicographically-smallest-string-after-operations-with-constraint:getSmallestString, lexicographically-smallest-string-after-substring-operation:smallestString, lfu-cache:LFUCache, license-key-formatting:licenseKeyFormatting, linked-list-components:numComponents, linked-list-in-binary-tree:isSubPath, linked-list-random-node:Solution, long-pressed-name:isLongPressedName, longer-contiguous-segments-of-ones-than-zeros:checkZeroOnes, longest-absolute-file-path:lengthLongestPath, longest-alternating-subarray:alternatingSubarray, longest-arithmetic-subsequence:longestArithSeqLength, longest-arithmetic-subsequence-of-given-difference:longestSubsequence, longest-binary-subsequence-less-than-or-equal-to-k:longestSubsequence, longest-chunked-palindrome-decomposition:longestDecomposition, longest-common-prefix:longestCommonPrefix, longest-common-subpath:longestCommonSubpath, longest-common-subsequence:longestCommonSubsequence, longest-common-suffix-queries:stringIndices, longest-consecutive-sequence:longestConsecutive, longest-continuous-increasing-subsequence:findLengthOfLCIS, longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit:longestSubarray, longest-cycle-in-a-graph:longestCycle, longest-duplicate-substring:longestDupSubstring, longest-even-odd-subarray-with-threshold:longestAlternatingSubarray, longest-happy-prefix:longestPrefix, longest-happy-string:longestDiverseString, longest-harmonious-subsequence:findLHS, longest-ideal-subsequence:longestIdealString, longest-increasing-path-in-a-matrix:longestIncreasingPath, longest-increasing-subsequence:lengthOfLIS, longest-increasing-subsequence-ii:lengthOfLIS, longest-mountain-in-array:longestMountain, longest-nice-subarray:longestNiceSubarray, longest-nice-substring:longestNiceSubstring, longest-non-decreasing-subarray-from-two-arrays:maxNonDecreasingLength, longest-palindrome:longestPalindrome, longest-palindrome-by-concatenating-two-letter-words:longestPalindrome, longest-palindromic-subsequence:longestPalindromeSubseq, longest-palindromic-substring:longestPalindrome, longest-path-with-different-adjacent-characters:longestPath, longest-repeating-character-replacement:characterReplacement, longest-special-path:longestSpecialPath, longest-square-streak-in-an-array:longestSquareStreak, longest-strictly-increasing-or-strictly-decreasing-subarray:longestMonotonicSubarray, longest-string-chain:longestStrChain, longest-subarray-of-1s-after-deleting-one-element:longestSubarray, longest-subarray-with-maximum-bitwise-and:longestSubarray, longest-subsequence-repeated-k-times:longestSubsequenceRepeatedK, longest-subsequence-with-decreasing-adjacent-difference:longestSubsequence, longest-subsequence-with-limited-sum:answerQueries, longest-substring-of-all-vowels-in-order:longestBeautifulSubstring, longest-substring-of-one-repeating-character:longestRepeating, longest-substring-with-at-least-k-repeating-characters:longestSubstring, longest-substring-without-repeating-characters:lengthOfLongestSubstring, longest-turbulent-subarray:maxTurbulenceSize, longest-uncommon-subsequence-i:findLUSlength, longest-uncommon-subsequence-ii:findLUSlength, longest-unequal-adjacent-groups-subsequence-i:getLongestSubsequence, longest-unequal-adjacent-groups-subsequence-ii:getWordsInLongestSubsequence, longest-univalue-path:longestUnivaluePath, longest-uploaded-prefix:LUPrefix, longest-valid-parentheses:longestValidParentheses, longest-well-performing-interval:longestWPI, longest-word-in-dictionary:longestWord, longest-word-in-dictionary-through-deleting:findLongestWord, longest-zigzag-path-in-a-binary-tree:longestZigZag, loud-and-rich:loudAndRich, lowest-common-ancestor-of-deepest-leaves:lcaDeepestLeaves, lru-cache:LRUCache, lucky-numbers-in-a-matrix:luckyNumbers, magic-squares-in-grid:numMagicSquaresInside, magical-string:magicalString, magnetic-force-between-two-balls:maxDistance, majority-element:majorityElement, majority-element-ii:majorityElement, make-a-square-with-the-same-color:canMakeSquare, make-array-elements-equal-to-zero:countValidSelections, make-array-empty:countOperationsToEmptyArray, make-array-strictly-increasing:makeArrayIncreasing, make-array-zero-by-subtracting-equal-amounts:minimumOperations, make-costs-of-paths-equal-in-a-binary-tree:minIncrements, make-k-subarray-sums-equal:makeSubKSumEqual, make-lexicographically-smallest-array-by-swapping-elements:lexicographicallySmallestArray, make-number-of-distinct-characters-equal:isItPossible, make-string-a-subsequence-using-cyclic-increments:canMakeSubsequence, make-sum-divisible-by-p:minSubarray, make-the-string-great:makeGood, make-the-xor-of-all-segments-equal-to-zero:minChanges, make-three-strings-equal:findMinimumOperations, make-two-arrays-equal-by-reversing-subarrays:canBeEqual, making-a-large-island:largestIsland, making-file-names-unique:getFolderNames, manhattan-distances-of-all-arrangements-of-pieces:distanceSum, map-of-highest-peak:highestPeak, map-sum-pairs:MapSum, mark-elements-on-array-by-performing-queries:unmarkedSumArray, masking-personal-information:maskPII, match-substring-after-replacement:matchReplacement, matchsticks-to-square:makesquare, matrix-block-sum:matrixBlockSum, matrix-cells-in-distance-order:allCellsDistOrder, matrix-diagonal-sum:diagonalSum, matrix-similarity-after-cyclic-shifts:areSimilar, max-area-of-island:maxAreaOfIsland, max-chunks-to-make-sorted:maxChunksToSorted, max-chunks-to-make-sorted-ii:maxChunksToSorted, max-consecutive-ones:findMaxConsecutiveOnes, max-consecutive-ones-iii:longestOnes, max-difference-you-can-get-from-changing-an-integer:maxDiff, max-dot-product-of-two-subsequences:maxDotProduct, max-increase-to-keep-city-skyline:maxIncreaseKeepingSkyline, max-number-of-k-sum-pairs:maxOperations, max-pair-sum-in-an-array:maxSum, max-points-on-a-line:maxPoints, max-sum-of-a-pair-with-equal-sum-of-digits:maximumSum, max-sum-of-rectangle-no-larger-than-k:maxSumSubmatrix, max-value-of-equation:findMaxValueOfEquation, maximal-network-rank:maximalNetworkRank, maximal-rectangle:maximalRectangle, maximal-score-after-applying-k-operations:maxKelements, maximal-square:maximalSquare, maximize-amount-after-two-days-of-conversions:maxAmount, maximize-area-of-square-hole-in-grid:maximizeSquareHoleArea, maximize-consecutive-elements-in-an-array-after-modification:maxSelectedElements, maximize-distance-to-closest-person:maxDistToClosest, maximize-greatness-of-an-array:maximizeGreatness, maximize-grid-happiness:getMaxGridHappiness, maximize-happiness-of-selected-children:maximumHappinessSum, maximize-number-of-nice-divisors:maxNiceDivisors, maximize-number-of-subsequences-in-a-string:maximumSubsequenceCount, maximize-palindrome-length-from-subsequences:longestPalindrome, maximize-score-after-n-operations:maxScore, maximize-score-of-numbers-in-ranges:maxPossibleScore, maximize-subarray-sum-after-removing-all-occurrences-of-one-element:maxSubarraySum, maximize-sum-of-array-after-k-negations:largestSumAfterKNegations, maximize-sum-of-weights-after-edge-removals:maximizeSumOfWeights, maximize-the-confusion-of-an-exam:maxConsecutiveAnswers, maximize-the-minimum-powered-city:maxPower, maximize-the-number-of-partitions-after-operations:maxPartitionsAfterOperations, maximize-the-number-of-target-nodes-after-connecting-trees-i:maxTargetNodes, maximize-the-number-of-target-nodes-after-connecting-trees-ii:maxTargetNodes, maximize-the-profit-as-the-salesman:maximizeTheProfit, maximize-the-topmost-element-after-k-moves:maximumTop, maximize-the-total-height-of-unique-towers:maximumTotalSum, maximize-total-cost-of-alternating-subarrays:maximumTotalCost, maximize-value-of-function-in-a-ball-passing-game:getMaxFunctionValue, maximize-win-from-two-segments:maximizeWin, maximum-69-number:maximum69Number , maximum-absolute-sum-of-any-subarray:maxAbsoluteSum, maximum-alternating-subsequence-sum:maxAlternatingSum, maximum-amount-of-money-robot-can-earn:maximumAmount, maximum-and-minimum-sums-of-at-most-size-k-subarrays:minMaxSubarraySum, maximum-and-minimum-sums-of-at-most-size-k-subsequences:minMaxSums, maximum-and-sum-of-array:maximumANDSum, maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts:maxArea, maximum-area-of-longest-diagonal-rectangle:areaOfMaxDiagonal, maximum-area-rectangle-with-point-constraints-i:maxRectangleArea, maximum-area-rectangle-with-point-constraints-ii:maxRectangleArea, maximum-ascending-subarray-sum:maxAscendingSum, maximum-average-pass-ratio:maxAverageRatio, maximum-average-subarray-i:findMaxAverage, maximum-bags-with-full-capacity-of-rocks:maximumBags, maximum-balanced-subsequence-sum:maxBalancedSubsequenceSum, maximum-beauty-of-an-array-after-applying-operation:maximumBeauty, maximum-binary-string-after-change:maximumBinaryString, maximum-binary-tree:constructMaximumBinaryTree, maximum-binary-tree-ii:insertIntoMaxTree, maximum-building-height:maxBuilding, maximum-candies-allocated-to-k-children:maximumCandies, maximum-candies-you-can-get-from-boxes:maxCandies, maximum-coins-from-k-consecutive-bags:maximumCoins, maximum-compatibility-score-sum:maxCompatibilitySum, maximum-consecutive-floors-without-special-floors:maxConsecutive, maximum-count-of-positive-integer-and-negative-integer:maximumCount, maximum-deletions-on-a-string:deleteString, maximum-depth-of-binary-tree:maxDepth, maximum-difference-between-adjacent-elements-in-a-circular-array:maxAdjacentDistance, maximum-difference-between-increasing-elements:maximumDifference, maximum-difference-between-node-and-ancestor:maxAncestorDiff, maximum-difference-by-remapping-a-digit:minMaxDifference, maximum-difference-score-in-a-grid:maxScore, maximum-distance-between-a-pair-of-values:maxDistance, maximum-distance-in-arrays:maxDistance, maximum-earnings-from-taxi:maxTaxiEarnings, maximum-elegance-of-a-k-length-subsequence:findMaximumElegance, maximum-element-after-decreasing-and-rearranging:maximumElementAfterDecrementingAndRearranging, maximum-element-sum-of-a-complete-subset-of-indices:maximumSum, maximum-employees-to-be-invited-to-a-meeting:maximumInvitations, maximum-enemy-forts-that-can-be-captured:captureForts, maximum-energy-boost-from-two-drinks:maxEnergyBoost, maximum-equal-frequency:maxEqualFreq, maximum-erasure-value:maximumUniqueSubarray, maximum-frequency-of-an-element-after-performing-operations-i:maxFrequency, maximum-frequency-of-an-element-after-performing-operations-ii:maxFrequency, maximum-frequency-stack:FreqStack, maximum-fruits-harvested-after-at-most-k-steps:maxTotalFruits, maximum-gap:maximumGap, maximum-genetic-difference-query:maxGeneticDifference, maximum-good-people-based-on-statements:maximumGood, maximum-good-subarray-sum:maximumSubarraySum, maximum-height-by-stacking-cuboids:maxHeight, maximum-height-of-a-triangle:maxHeightOfTriangle, maximum-ice-cream-bars:maxIceCream, maximum-length-of-a-concatenated-string-with-unique-characters:maxLength, maximum-length-of-pair-chain:findLongestChain, maximum-length-of-repeated-subarray:findLength, maximum-length-of-subarray-with-positive-product:getMaxLen, maximum-length-substring-with-two-occurrences:maximumLengthSubstring, maximum-level-sum-of-a-binary-tree:maxLevelSum, maximum-matching-of-players-with-trainers:matchPlayersAndTrainers, maximum-matrix-sum:maxMatrixSum, maximum-multiplication-score:maxScore, maximum-nesting-depth-of-the-parentheses:maxDepth, maximum-nesting-depth-of-two-valid-parentheses-strings:maxDepthAfterSplit, maximum-non-negative-product-in-a-matrix:maxProductPath, maximum-number-of-achievable-transfer-requests:maximumRequests, maximum-number-of-alloys:maxNumberOfAlloys, maximum-number-of-balloons:maxNumberOfBalloons, maximum-number-of-balls-in-a-box:countBalls, maximum-number-of-coins-you-can-get:maxCoins, maximum-number-of-consecutive-values-you-can-make:getMaximumConsecutive, maximum-number-of-darts-inside-of-a-circular-dartboard:numPoints, maximum-number-of-distinct-elements-after-operations:maxDistinctElements, maximum-number-of-eaten-apples:eatenApples, maximum-number-of-events-that-can-be-attended:maxEvents, maximum-number-of-events-that-can-be-attended-ii:maxValue, maximum-number-of-fish-in-a-grid:findMaxFish, maximum-number-of-groups-entering-a-competition:maximumGroups, maximum-number-of-groups-getting-fresh-donuts:maxHappyGroups, maximum-number-of-groups-with-increasing-length:maxIncreasingGroups, maximum-number-of-integers-to-choose-from-a-range-i:maxCount, maximum-number-of-jumps-to-reach-the-last-index:maximumJumps, maximum-number-of-k-divisible-components:maxKDivisibleComponents, maximum-number-of-moves-in-a-grid:maxMoves, maximum-number-of-moves-to-kill-all-pawns:maxMoves, maximum-number-of-non-overlapping-palindrome-substrings:maxPalindromes, maximum-number-of-non-overlapping-subarrays-with-sum-equals-target:maxNonOverlapping, maximum-number-of-non-overlapping-substrings:maxNumOfSubstrings, maximum-number-of-occurrences-of-a-substring:maxFreq, maximum-number-of-operations-to-move-ones-to-the-end:maxOperations, maximum-number-of-operations-with-the-same-score-i:maxOperations, maximum-number-of-operations-with-the-same-score-ii:maxOperations, maximum-number-of-pairs-in-array:numberOfPairs, maximum-number-of-points-from-grid-queries:maxPoints, maximum-number-of-points-with-cost:maxPoints, maximum-number-of-removable-characters:maximumRemovals, maximum-number-of-robots-within-budget:maximumRobots, maximum-number-of-tasks-you-can-assign:maxTaskAssign, maximum-number-of-visible-points:visiblePoints, maximum-number-of-vowels-in-a-substring-of-given-length:maxVowels, maximum-number-of-ways-to-partition-an-array:waysToPartition, maximum-number-of-weeks-for-which-you-can-work:numberOfWeeks, maximum-number-of-words-found-in-sentences:mostWordsFound, maximum-number-of-words-you-can-type:canBeTypedWords, maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k:findMaximumNumber, maximum-odd-binary-number:maximumOddBinaryNumber, maximum-of-absolute-value-expression:maxAbsValExpr, maximum-or:maximumOr, maximum-palindromes-after-operations:maxPalindromesAfterOperations, maximum-path-quality-of-a-graph:maximalPathQuality, maximum-performance-of-a-team:maxPerformance, maximum-points-after-collecting-coins-from-all-nodes:maximumPoints, maximum-points-after-enemy-battles:maximumPoints, maximum-points-in-an-archery-competition:maximumBobPoints, maximum-points-inside-the-square:maxPointsInsideSquare, maximum-points-tourist-can-earn:maxScore, maximum-points-you-can-obtain-from-cards:maxScore, maximum-population-year:maximumPopulation, maximum-possible-number-by-binary-concatenation:maxGoodNumber, maximum-prime-difference:maximumPrimeDifference, maximum-product-after-k-increments:maximumProduct, maximum-product-difference-between-two-pairs:maxProductDifference, maximum-product-of-splitted-binary-tree:maxProduct, maximum-product-of-the-length-of-two-palindromic-subsequences:maxProduct, maximum-product-of-the-length-of-two-palindromic-substrings:maxProduct, maximum-product-of-three-numbers:maximumProduct, maximum-product-of-two-elements-in-an-array:maxProduct, maximum-product-of-word-lengths:maxProduct, maximum-product-subarray:maxProduct, maximum-profit-in-job-scheduling:jobScheduling, maximum-profit-of-operating-a-centennial-wheel:minOperationsMaxProfit, maximum-repeating-substring:maxRepeating, maximum-rows-covered-by-columns:maximumRows, maximum-running-time-of-n-computers:maxRunTime, maximum-score-after-applying-operations-on-a-tree:maximumScoreAfterOperations, maximum-score-after-splitting-a-string:maxScore, maximum-score-from-grid-operations:maximumScore, maximum-score-from-performing-multiplication-operations:maximumScore, maximum-score-from-removing-stones:maximumScore, maximum-score-from-removing-substrings:maximumGain, maximum-score-of-a-good-subarray:maximumScore, maximum-score-of-a-node-sequence:maximumScore, maximum-score-of-non-overlapping-intervals:maximumWeight, maximum-score-of-spliced-array:maximumsSplicedArray, maximum-score-words-formed-by-letters:maxScoreWords, maximum-segment-sum-after-removals:maximumSegmentSum, maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold:maxSideLength, maximum-size-of-a-set-after-removals:maximumSetSize, maximum-spending-after-buying-items:maxSpending, maximum-split-of-positive-even-integers:maximumEvenSplit, maximum-square-area-by-removing-fences-from-a-field:maximizeSquareArea, maximum-star-sum-of-a-graph:maxStarSum, maximum-strength-of-a-group:maxStrength, maximum-strength-of-k-disjoint-subarrays:maximumStrength, maximum-strictly-increasing-cells-in-a-matrix:maxIncreasingCells, maximum-strong-pair-xor-i:maximumStrongPairXor, maximum-strong-pair-xor-ii:maximumStrongPairXor, maximum-students-taking-exam:maxStudents, maximum-subarray:maxSubArray, maximum-subarray-min-product:maxSumMinProduct, maximum-subarray-sum-with-length-divisible-by-k:maxSubarraySum, maximum-subarray-sum-with-one-deletion:maximumSum, maximum-subarray-with-equal-products:maxLength, maximum-subsequence-score:maxScore, maximum-sum-bst-in-binary-tree:maxSumBST, maximum-sum-circular-subarray:maxSubarraySumCircular, maximum-sum-obtained-of-any-permutation:maxSumRangeQuery, maximum-sum-of-3-non-overlapping-subarrays:maxSumOfThreeSubarrays, maximum-sum-of-almost-unique-subarray:maxSum, maximum-sum-of-an-hourglass:maxSum, maximum-sum-of-distinct-subarrays-with-length-k:maximumSubarraySum, maximum-sum-of-subsequence-with-non-adjacent-elements:maximumSumSubsequence, maximum-sum-of-two-non-overlapping-subarrays:maxSumTwoNoOverlap, maximum-sum-queries:maximumSumQueries, maximum-sum-with-exactly-k-elements:maximizeSum, maximum-swap:maximumSwap, maximum-tastiness-of-candy-basket:maximumTastiness, maximum-total-beauty-of-the-gardens:maximumBeauty, maximum-total-damage-with-spell-casting:maximumTotalDamage, maximum-total-importance-of-roads:maximumImportance, maximum-total-reward-using-operations-i:maxTotalReward, maximum-total-reward-using-operations-ii:maxTotalReward, maximum-trailing-zeros-in-a-cornered-path:maxTrailingZeros, maximum-twin-sum-of-a-linked-list:pairSum, maximum-units-on-a-truck:maximumUnits, maximum-value-after-insertion:maxValue, maximum-value-at-a-given-index-in-a-bounded-array:maxValue, maximum-value-of-a-string-in-an-array:maximumValue, maximum-value-of-an-ordered-triplet-i:maximumTripletValue, maximum-value-of-an-ordered-triplet-ii:maximumTripletValue, maximum-value-of-k-coins-from-piles:maxValueOfCoins, maximum-value-sum-by-placing-three-rooks-i:maximumValueSum, maximum-value-sum-by-placing-three-rooks-ii:maximumValueSum, maximum-white-tiles-covered-by-a-carpet:maximumWhiteTiles, maximum-width-of-binary-tree:widthOfBinaryTree, maximum-width-ramp:maxWidthRamp, maximum-xor-after-operations:maximumXOR, maximum-xor-for-each-query:getMaximumXor, maximum-xor-of-two-numbers-in-an-array:findMaximumXOR, maximum-xor-product:maximumXorProduct, maximum-xor-score-subarray-queries:maximumSubarrayXor, maximum-xor-with-an-element-from-array:maximizeXor, mean-of-array-after-removing-some-elements:trimMean, median-of-two-sorted-arrays:findMedianSortedArrays, meeting-rooms-iii:mostBooked, merge-intervals:merge, merge-k-sorted-lists:mergeKLists, merge-nodes-in-between-zeros:mergeNodes, merge-similar-items:mergeSimilarItems, merge-sorted-array:merge, merge-strings-alternately:mergeAlternately, merge-triplets-to-form-target-triplet:mergeTriplets, merge-two-2d-arrays-by-summing-values:mergeArrays, merge-two-binary-trees:mergeTrees, merge-two-sorted-lists:mergeTwoLists, mice-and-cheese:miceAndCheese, middle-of-the-linked-list:middleNode, min-cost-climbing-stairs:minCostClimbingStairs, min-cost-to-connect-all-points:minCostConnectPoints, min-max-game:minMaxGame, min-stack:MinStack, minesweeper:updateBoard, mini-parser:deserialize, minimize-deviation-in-array:minimumDeviation, minimize-hamming-distance-after-swap-operations:minimumHammingDistance, minimize-length-of-array-using-operations:minimumArrayLength, minimize-malware-spread:minMalwareSpread, minimize-malware-spread-ii:minMalwareSpread, minimize-manhattan-distances:minimumDistance, minimize-maximum-of-array:minimizeArrayValue, minimize-maximum-pair-sum-in-array:minPairSum, minimize-or-of-remaining-elements-using-operations:minOrAfterOperations, minimize-result-by-adding-parentheses-to-expression:minimizeResult, minimize-string-length:minimizedStringLength, minimize-the-difference-between-target-and-chosen-elements:minimizeTheDifference, minimize-the-maximum-adjacent-element-difference:minDifference, minimize-the-maximum-difference-of-pairs:minimizeMax, minimize-the-maximum-edge-weight-of-graph:minMaxWeight, minimize-the-maximum-of-two-arrays:minimizeSet, minimize-the-total-price-of-the-trips:minimumTotalPrice, minimize-xor:minimizeXor, minimized-maximum-of-products-distributed-to-any-store:minimizedMaximum, minimum-absolute-difference:minimumAbsDifference, minimum-absolute-difference-between-elements-with-constraint:minAbsoluteDifference, minimum-absolute-difference-in-bst:getMinimumDifference, minimum-absolute-difference-queries:minDifference, minimum-absolute-sum-difference:minAbsoluteSumDiff, minimum-add-to-make-parentheses-valid:minAddToMakeValid, minimum-addition-to-make-integer-beautiful:makeIntegerBeautiful, minimum-additions-to-make-valid-string:addMinimum, minimum-adjacent-swaps-for-k-consecutive-ones:minMoves, minimum-adjacent-swaps-to-reach-the-kth-smallest-number:getMinSwaps, minimum-amount-of-damage-dealt-to-bob:minDamage, minimum-amount-of-time-to-collect-garbage:garbageCollection, minimum-amount-of-time-to-fill-cups:fillCups, minimum-area-rectangle:minAreaRect, minimum-area-rectangle-ii:minAreaFreeRect, minimum-array-changes-to-make-differences-equal:minChanges, minimum-array-end:minEnd, minimum-array-length-after-pair-removals:minLengthAfterRemovals, minimum-array-sum:minArraySum, minimum-ascii-delete-sum-for-two-strings:minimumDeleteSum, minimum-average-difference:minimumAverageDifference, minimum-average-of-smallest-and-largest-elements:minimumAverage, minimum-bit-flips-to-convert-number:minBitFlips, minimum-changes-to-make-alternating-binary-string:minOperations, minimum-changes-to-make-k-semi-palindromes:minimumChanges, minimum-common-value:getCommon, minimum-consecutive-cards-to-pick-up:minimumCardPickup, minimum-cost-for-cutting-cake-i:minimumCost, minimum-cost-for-cutting-cake-ii:minimumCost, minimum-cost-for-tickets:mincostTickets, minimum-cost-homecoming-of-a-robot-in-a-grid:minCost, minimum-cost-of-a-path-with-special-roads:minimumCost, minimum-cost-of-buying-candies-with-discount:minimumCost, minimum-cost-to-change-the-final-value-of-expression:minOperationsToFlip, minimum-cost-to-connect-two-groups-of-points:connectTwoGroups, minimum-cost-to-convert-string-i:minimumCost, minimum-cost-to-convert-string-ii:minimumCost, minimum-cost-to-cut-a-stick:minCost, minimum-cost-to-equalize-array:minCostToEqualizeArray, minimum-cost-to-hire-k-workers:mincostToHireWorkers, minimum-cost-to-make-all-characters-equal:minimumCost, minimum-cost-to-make-array-equal:minCost, minimum-cost-to-make-array-equalindromic:minimumCost, minimum-cost-to-make-arrays-identical:minCost, minimum-cost-to-make-at-least-one-valid-path-in-a-grid:minCost, minimum-cost-to-merge-stones:mergeStones, minimum-cost-to-move-chips-to-the-same-position:minCostToMoveChips, minimum-cost-to-reach-destination-in-time:minCost, minimum-cost-to-set-cooking-time:minCostSetTime, minimum-cost-to-split-an-array:minCost, minimum-cost-tree-from-leaf-values:mctFromLeafValues, minimum-cost-walk-in-weighted-graph:minimumCost, minimum-cuts-to-divide-a-circle:numberOfCuts, minimum-degree-of-a-connected-trio-in-a-graph:minTrioDegree, minimum-deletions-to-make-array-beautiful:minDeletion, minimum-deletions-to-make-array-divisible:minOperations, minimum-deletions-to-make-character-frequencies-unique:minDeletions, minimum-deletions-to-make-string-balanced:minimumDeletions, minimum-deletions-to-make-string-k-special:minimumDeletions, minimum-depth-of-binary-tree:minDepth, minimum-difference-between-highest-and-lowest-of-k-scores:minimumDifference, minimum-difference-between-largest-and-smallest-value-in-three-moves:minDifference, minimum-difference-in-sums-after-removal-of-elements:minimumDifference, minimum-difficulty-of-a-job-schedule:minDifficulty, minimum-distance-between-bst-nodes:minDiffInBST, minimum-distance-to-the-target-element:getMinDistance, minimum-distance-to-type-a-word-using-two-fingers:minimumDistance, minimum-division-operations-to-make-array-non-decreasing:minOperations, minimum-domino-rotations-for-equal-row:minDominoRotations, minimum-edge-reversals-so-every-node-is-reachable:minEdgeReversals, minimum-edge-weight-equilibrium-queries-in-a-tree:minOperationsQueries, minimum-element-after-replacement-with-digit-sum:minElement, minimum-elements-to-add-to-form-a-given-sum:minElements, minimum-equal-sum-of-two-arrays-after-replacing-zeros:minSum, minimum-falling-path-sum:minFallingPathSum, minimum-falling-path-sum-ii:minFallingPathSum, minimum-flips-to-make-a-or-b-equal-to-c:minFlips, minimum-fuel-cost-to-report-to-the-capital:minimumFuelCost, minimum-garden-perimeter-to-collect-enough-apples:minimumPerimeter, minimum-genetic-mutation:minMutation, minimum-height-trees:findMinHeightTrees, minimum-hours-of-training-to-win-a-competition:minNumberOfHours, minimum-impossible-or:minImpossibleOR, minimum-incompatibility:minimumIncompatibility, minimum-increment-operations-to-make-array-beautiful:minIncrementOperations, minimum-increment-to-make-array-unique:minIncrementForUnique, minimum-index-of-a-valid-split:minimumIndex, minimum-index-sum-of-two-lists:findRestaurant, minimum-initial-energy-to-finish-tasks:minimumEffort, minimum-insertion-steps-to-make-a-string-palindrome:minInsertions, minimum-insertions-to-balance-a-parentheses-string:minInsertions, minimum-interval-to-include-each-query:minInterval, minimum-jumps-to-reach-home:minimumJumps, minimum-length-of-anagram-concatenation:minAnagramLength, minimum-length-of-string-after-deleting-similar-ends:minimumLength, minimum-length-of-string-after-operations:minimumLength, minimum-levels-to-gain-more-points:minimumLevels, minimum-limit-of-balls-in-a-bag:minimumSize, minimum-lines-to-represent-a-line-chart:minimumLines, minimum-money-required-before-transactions:minimumMoney, minimum-moves-to-capture-the-queen:minMovesToCaptureTheQueen, minimum-moves-to-convert-string:minimumMoves, minimum-moves-to-equal-array-elements:minMoves, minimum-moves-to-equal-array-elements-ii:minMoves2, minimum-moves-to-make-array-complementary:minMoves, minimum-moves-to-move-a-box-to-their-target-location:minPushBox, minimum-moves-to-pick-k-ones:minimumMoves, minimum-moves-to-reach-target-score:minMoves, minimum-moves-to-reach-target-with-rotations:minimumMoves, minimum-moves-to-spread-stones-over-grid:minimumMoves, minimum-non-zero-product-of-the-array-elements:minNonZeroProduct, minimum-number-game:numberGame, minimum-number-of-arrows-to-burst-balloons:findMinArrowShots, minimum-number-of-chairs-in-a-waiting-room:minimumChairs, minimum-number-of-changes-to-make-binary-string-beautiful:minChanges, minimum-number-of-coins-for-fruits:minimumCoins, minimum-number-of-coins-to-be-added:minimumAddedCoins, minimum-number-of-days-to-disconnect-island:minDays, minimum-number-of-days-to-eat-n-oranges:minDays, minimum-number-of-days-to-make-m-bouquets:minDays, minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix:minFlips, minimum-number-of-flips-to-make-binary-grid-palindromic-i:minFlips, minimum-number-of-flips-to-make-binary-grid-palindromic-ii:minFlips, minimum-number-of-flips-to-make-the-binary-string-alternating:minFlips, minimum-number-of-food-buckets-to-feed-the-hamsters:minimumBuckets, minimum-number-of-frogs-croaking:minNumberOfFrogs, minimum-number-of-groups-to-create-a-valid-assignment:minGroupsForValidAssignment, minimum-number-of-increments-on-subarrays-to-form-a-target-array:minNumberOperations, minimum-number-of-k-consecutive-bit-flips:minKBitFlips, minimum-number-of-moves-to-make-palindrome:minMovesToMakePalindrome, minimum-number-of-moves-to-seat-everyone:minMovesToSeat, minimum-number-of-operations-to-convert-time:convertTime, minimum-number-of-operations-to-make-all-array-elements-equal-to-1:minOperations, minimum-number-of-operations-to-make-array-continuous:minOperations, minimum-number-of-operations-to-make-array-empty:minOperations, minimum-number-of-operations-to-make-array-xor-equal-to-k:minOperations, minimum-number-of-operations-to-make-arrays-similar:makeSimilar, minimum-number-of-operations-to-make-elements-in-array-distinct:minimumOperations, minimum-number-of-operations-to-make-string-sorted:makeStringSorted, minimum-number-of-operations-to-make-word-k-periodic:minimumOperationsToMakeKPeriodic, minimum-number-of-operations-to-make-x-and-y-equal:minimumOperationsToMakeEqual, minimum-number-of-operations-to-move-all-balls-to-each-box:minOperations, minimum-number-of-operations-to-reinitialize-a-permutation:reinitializePermutation, minimum-number-of-operations-to-satisfy-conditions:minimumOperations, minimum-number-of-operations-to-sort-a-binary-tree-by-level:minimumOperations, minimum-number-of-people-to-teach:minimumTeachings, minimum-number-of-pushes-to-type-word-i:minimumPushes, minimum-number-of-pushes-to-type-word-ii:minimumPushes, minimum-number-of-refueling-stops:minRefuelStops, minimum-number-of-removals-to-make-mountain-array:minimumMountainRemovals, minimum-number-of-seconds-to-make-mountain-height-zero:minNumberOfSeconds, minimum-number-of-steps-to-make-two-strings-anagram:minSteps, minimum-number-of-steps-to-make-two-strings-anagram-ii:minSteps, minimum-number-of-swaps-to-make-the-binary-string-alternating:minSwaps, minimum-number-of-swaps-to-make-the-string-balanced:minSwaps, minimum-number-of-taps-to-open-to-water-a-garden:minTaps, minimum-number-of-valid-strings-to-form-target-i:minValidStrings, minimum-number-of-valid-strings-to-form-target-ii:minValidStrings, minimum-number-of-vertices-to-reach-all-nodes:findSmallestSetOfVertices, minimum-number-of-visited-cells-in-a-grid:minimumVisitedCells, minimum-number-of-work-sessions-to-finish-the-tasks:minSessions, minimum-numbers-of-function-calls-to-make-target-array:minOperations, minimum-obstacle-removal-to-reach-corner:minimumObstacles, minimum-one-bit-operations-to-make-integers-zero:minimumOneBitOperations, minimum-operations-to-collect-elements:minOperations, minimum-operations-to-convert-number:minimumOperations, minimum-operations-to-exceed-threshold-value-i:minOperations, minimum-operations-to-exceed-threshold-value-ii:minOperations, minimum-operations-to-form-subsequence-with-target-sum:minOperations, minimum-operations-to-halve-array-sum:halveArray, minimum-operations-to-make-a-special-number:minimumOperations, minimum-operations-to-make-a-subsequence:minOperations, minimum-operations-to-make-a-uni-value-grid:minOperations, minimum-operations-to-make-all-array-elements-equal:minOperations, minimum-operations-to-make-array-equal:minOperations, minimum-operations-to-make-array-equal-ii:minOperations, minimum-operations-to-make-array-equal-to-target:minimumOperations, minimum-operations-to-make-array-values-equal-to-k:minOperations, minimum-operations-to-make-binary-array-elements-equal-to-one-i:minOperations, minimum-operations-to-make-binary-array-elements-equal-to-one-ii:minOperations, minimum-operations-to-make-character-frequencies-equal:makeStringGood, minimum-operations-to-make-columns-strictly-increasing:minimumOperations, minimum-operations-to-make-median-of-array-equal-to-k:minOperationsToMakeMedianK, minimum-operations-to-make-the-array-alternating:minimumOperations, minimum-operations-to-make-the-array-increasing:minOperations, minimum-operations-to-make-the-array-k-increasing:kIncreasing, minimum-operations-to-make-the-integer-zero:makeTheIntegerZero, minimum-operations-to-maximize-last-elements-in-arrays:minOperations, minimum-operations-to-reduce-an-integer-to-0:minOperations, minimum-operations-to-reduce-x-to-zero:minOperations, minimum-operations-to-write-the-letter-y-on-a-grid:minimumOperationsToWriteY, minimum-path-cost-in-a-grid:minPathCost, minimum-path-sum:minPathSum, minimum-penalty-for-a-shop:bestClosingTime, minimum-positive-sum-subarray:minimumSumSubarray, minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits:minInteger, minimum-processing-time:minProcessingTime, minimum-recolors-to-get-k-consecutive-black-blocks:minimumRecolors, minimum-rectangles-to-cover-points:minRectanglesToCoverPoints, minimum-remove-to-make-valid-parentheses:minRemoveToMakeValid, minimum-replacements-to-sort-the-array:minimumReplacement, minimum-reverse-operations:minReverseOperations, minimum-right-shifts-to-sort-the-array:minimumRightShifts, minimum-rounds-to-complete-all-tasks:minimumRounds, minimum-score-after-removals-on-a-tree:minimumScore, minimum-score-by-changing-two-elements:minimizeSum, minimum-score-of-a-path-between-two-cities:minScore, minimum-score-triangulation-of-polygon:minScoreTriangulation, minimum-seconds-to-equalize-a-circular-array:minimumSeconds, minimum-sideway-jumps:minSideJumps, minimum-size-subarray-in-infinite-array:minSizeSubarray, minimum-size-subarray-sum:minSubArrayLen, minimum-skips-to-arrive-at-meeting-on-time:minSkips, minimum-space-wasted-from-packaging:minWastedSpace, minimum-speed-to-arrive-on-time:minSpeedOnTime, minimum-string-length-after-removing-substrings:minLength, minimum-subsequence-in-non-increasing-order:minSubsequence, minimum-substring-partition-of-equal-character-frequency:minimumSubstringsInPartition, minimum-suffix-flips:minFlips, minimum-sum-of-four-digit-number-after-splitting-digits:minimumSum, minimum-sum-of-mountain-triplets-i:minimumSum, minimum-sum-of-mountain-triplets-ii:minimumSum, minimum-sum-of-squared-difference:minSumSquareDiff, minimum-sum-of-values-by-dividing-array:minimumValueSum, minimum-swaps-to-arrange-a-binary-grid:minSwaps, minimum-swaps-to-group-all-1s-together-ii:minSwaps, minimum-swaps-to-make-sequences-increasing:minSwap, minimum-swaps-to-make-strings-equal:minimumSwap, minimum-time-difference:findMinDifference, minimum-time-to-break-locks-i:findMinimumTime, minimum-time-to-collect-all-apples-in-a-tree:minTime, minimum-time-to-complete-all-tasks:findMinimumTime, minimum-time-to-complete-trips:minimumTime, minimum-time-to-finish-the-race:minimumFinishTime, minimum-time-to-make-array-sum-at-most-x:minimumTime, minimum-time-to-make-rope-colorful:minCost, minimum-time-to-remove-all-cars-containing-illegal-goods:minimumTime, minimum-time-to-repair-cars:repairCars, minimum-time-to-revert-word-to-initial-state-i:minimumTimeToInitialState, minimum-time-to-revert-word-to-initial-state-ii:minimumTimeToInitialState, minimum-time-to-type-word-using-special-typewriter:minTimeToType, minimum-time-to-visit-a-cell-in-a-grid:minimumTime, minimum-time-to-visit-disappearing-nodes:minimumTime, minimum-time-visiting-all-points:minTimeToVisitAllPoints, minimum-total-cost-to-make-arrays-unequal:minimumTotalCost, minimum-total-distance-traveled:minimumTotalDistance, minimum-total-space-wasted-with-k-resizing-operations:minSpaceWastedKResizing, minimum-value-to-get-positive-step-by-step-sum:minStartValue, minimum-weighted-subgraph-with-the-required-paths:minimumWeight, minimum-white-tiles-after-covering-with-carpets:minimumWhiteTiles, minimum-window-substring:minWindow, minimum-xor-sum-of-two-arrays:minimumXORSum, mirror-reflection:mirrorReflection, missing-number:missingNumber, modify-graph-edge-weights:modifiedGraphEdges, modify-the-matrix:modifiedMatrix, monotone-increasing-digits:monotoneIncreasingDigits, monotonic-array:isMonotonic, most-beautiful-item-for-each-query:maximumBeauty, most-common-word:mostCommonWord, most-frequent-even-element:mostFrequentEven, most-frequent-ids:mostFrequentIDs, most-frequent-number-following-key-in-an-array:mostFrequent, most-frequent-prime:mostFrequentPrime, most-frequent-subtree-sum:findFrequentTreeSum, most-popular-video-creator:mostPopularCreator, most-profit-assigning-work:maxProfitAssignment, most-profitable-path-in-a-tree:mostProfitablePath, most-stones-removed-with-same-row-or-column:removeStones, most-visited-sector-in-a-circular-track:mostVisited, move-pieces-to-obtain-a-string:canChange, move-zeroes:moveZeroes, movement-of-robots:sumDistance, moving-stones-until-consecutive:numMovesStones, moving-stones-until-consecutive-ii:numMovesStonesII, multiply-strings:multiply, my-calendar-i:MyCalendar, my-calendar-ii:MyCalendarTwo, my-calendar-iii:MyCalendarThree, n-queens:solveNQueens, n-queens-ii:totalNQueens, n-repeated-element-in-size-2n-array:repeatedNTimes, n-th-tribonacci-number:tribonacci, naming-a-company:distinctNames, nearest-exit-from-entrance-in-maze:nearestExit, neighboring-bitwise-xor:doesValidArrayExist, neither-minimum-nor-maximum:findNonMinOrMax, network-delay-time:networkDelayTime, new-21-game:new21Game, next-greater-element-i:nextGreaterElement, next-greater-element-ii:nextGreaterElements, next-greater-element-iii:nextGreaterElement, next-greater-element-iv:secondGreaterElement, next-greater-node-in-linked-list:nextLargerNodes, next-greater-numerically-balanced-number:nextBeautifulNumber, next-permutation:nextPermutation, nim-game:canWinNim, node-with-highest-edge-score:edgeScore, non-decreasing-array:checkPossibility, non-decreasing-subsequences:findSubsequences, non-negative-integers-without-consecutive-ones:findIntegers, non-overlapping-intervals:eraseOverlapIntervals, nth-digit:findNthDigit, nth-magical-number:nthMagicalNumber, number-complement:findComplement, number-of-1-bits:hammingWeight, number-of-adjacent-elements-with-the-same-color:colorTheArray, number-of-arithmetic-triplets:arithmeticTriplets, number-of-atoms:countOfAtoms, number-of-beautiful-integers-in-the-range:numberOfBeautifulIntegers, number-of-beautiful-pairs:countBeautifulPairs, number-of-beautiful-partitions:beautifulPartitions, number-of-bit-changes-to-make-two-integers-equal:minChanges, number-of-black-blocks:countBlackBlocks, number-of-boomerangs:numberOfBoomerangs, number-of-burgers-with-no-waste-of-ingredients:numOfBurgers, number-of-changing-keys:countKeyChanges, number-of-closed-islands:closedIsland, number-of-common-factors:commonFactors, number-of-days-between-two-dates:daysBetweenDates, number-of-dice-rolls-with-target-sum:numRollsToTarget, number-of-different-integers-in-a-string:numDifferentIntegers, number-of-different-subsequences-gcds:countDifferentSubsequenceGCDs, number-of-digit-one:countDigitOne, number-of-distinct-averages:distinctAverages, number-of-distinct-roll-sequences:distinctSequences, number-of-employees-who-met-the-target:numberOfEmployeesWhoMetTarget, number-of-enclaves:numEnclaves, number-of-equivalent-domino-pairs:numEquivDominoPairs, number-of-even-and-odd-bits:evenOddBit, number-of-excellent-pairs:countExcellentPairs, number-of-flowers-in-full-bloom:fullBloomFlowers, number-of-good-leaf-nodes-pairs:countPairs, number-of-good-pairs:numIdenticalPairs, number-of-good-paths:numberOfGoodPaths, number-of-good-ways-to-split-a-string:numSplits, number-of-great-partitions:countPartitions, number-of-increasing-paths-in-a-grid:countPaths, number-of-laser-beams-in-a-bank:numberOfBeams, number-of-lines-to-write-string:numberOfLines, number-of-longest-increasing-subsequence:findNumberOfLIS, number-of-matching-subsequences:numMatchingSubseq, number-of-music-playlists:numMusicPlaylists, number-of-nodes-in-the-sub-tree-with-the-same-label:countSubTrees, number-of-operations-to-make-network-connected:makeConnected, number-of-orders-in-the-backlog:getNumberOfBacklogOrders, number-of-pairs-of-interchangeable-rectangles:interchangeableRectangles, number-of-pairs-of-strings-with-concatenation-equal-to-target:numOfPairs, number-of-pairs-satisfying-inequality:numberOfPairs, number-of-paths-with-max-score:pathsWithMaxScore, number-of-people-aware-of-a-secret:peopleAwareOfSecret, number-of-possible-sets-of-closing-branches:numberOfSets, number-of-provinces:findCircleNum, number-of-recent-calls:RecentCounter, number-of-rectangles-that-can-form-the-largest-square:countGoodRectangles, number-of-restricted-paths-from-first-to-last-node:countRestrictedPaths, number-of-segments-in-a-string:countSegments, number-of-senior-citizens:countSeniors, number-of-sets-of-k-non-overlapping-line-segments:numberOfSets, number-of-smooth-descent-periods-of-a-stock:getDescentPeriods, number-of-squareful-arrays:numSquarefulPerms, number-of-steps-to-reduce-a-number-in-binary-representation-to-one:numSteps, number-of-steps-to-reduce-a-number-to-zero:numberOfSteps, number-of-strings-that-appear-as-substrings-in-word:numOfStrings, number-of-strings-which-can-be-rearranged-to-contain-substring:stringCount, number-of-students-doing-homework-at-a-given-time:busyStudent, number-of-students-unable-to-eat-lunch:countStudents, number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold:numOfSubarrays, number-of-sub-arrays-with-odd-sum:numOfSubarrays, number-of-subarrays-that-match-a-pattern-i:countMatchingSubarrays, number-of-subarrays-that-match-a-pattern-ii:countMatchingSubarrays, number-of-subarrays-with-and-value-of-k:countSubarrays, number-of-subarrays-with-bounded-maximum:numSubarrayBoundedMax, number-of-subarrays-with-gcd-equal-to-k:subarrayGCD, number-of-subarrays-with-lcm-equal-to-k:subarrayLCM, number-of-submatrices-that-sum-to-target:numSubmatrixSumTarget, number-of-subsequences-that-satisfy-the-given-sum-condition:numSubseq, number-of-substrings-containing-all-three-characters:numberOfSubstrings, number-of-substrings-with-only-1s:numSub, number-of-times-binary-string-is-prefix-aligned:numTimesAllBlue, number-of-unequal-triplets-in-array:unequalTriplets, number-of-unique-good-subsequences:numberOfUniqueGoodSubsequences, number-of-valid-clock-times:countTime, number-of-valid-move-combinations-on-chessboard:countCombinations, number-of-valid-words-for-each-puzzle:findNumOfValidWords, number-of-valid-words-in-a-sentence:countValidWords, number-of-visible-people-in-a-queue:canSeePersonsCount, number-of-ways-of-cutting-a-pizza:ways, number-of-ways-to-arrive-at-destination:countPaths, number-of-ways-to-buy-pens-and-pencils:waysToBuyPensPencils, number-of-ways-to-divide-a-long-corridor:numberOfWays, number-of-ways-to-earn-points:waysToReachTarget, number-of-ways-to-form-a-target-string-given-a-dictionary:numWays, number-of-ways-to-paint-n-3-grid:numOfWays, number-of-ways-to-reach-a-position-after-exactly-k-steps:numberOfWays, number-of-ways-to-rearrange-sticks-with-k-sticks-visible:rearrangeSticks, number-of-ways-to-reconstruct-a-tree:checkWays, number-of-ways-to-reorder-array-to-get-same-bst:numOfWays, number-of-ways-to-select-buildings:numberOfWays, number-of-ways-to-separate-numbers:numberOfCombinations, number-of-ways-to-split-a-string:numWays, number-of-ways-to-split-array:waysToSplitArray, number-of-ways-to-stay-in-the-same-place-after-some-steps:numWays, number-of-ways-to-wear-different-hats-to-each-other:numberWays, number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers:numTriplets, number-of-wonderful-substrings:wonderfulSubstrings, number-of-zero-filled-subarrays:zeroFilledSubarray, numbers-at-most-n-given-digit-set:atMostNGivenDigitSet, numbers-with-repeated-digits:numDupDigitsAtMostN, numbers-with-same-consecutive-differences:numsSameConsecDiff, occurrences-after-bigram:findOcurrences, odd-even-jump:oddEvenJumps, odd-even-linked-list:oddEvenList, odd-string-difference:oddString, ones-and-zeroes:findMaxForm, online-election:TopVotedCandidate, online-majority-element-in-subarray:MajorityChecker, online-stock-span:StockSpanner, open-the-lock:openLock, operations-on-tree:LockingTree, optimal-division:optimalDivision, optimal-partition-of-string:partitionString, orderly-queue:orderlyQueue, out-of-boundary-paths:findPaths, pacific-atlantic-water-flow:pacificAtlantic, paint-house-iii:minCost, paint-house-iv:minCost, painting-a-grid-with-three-different-colors:colorTheGrid, painting-the-walls:paintWalls, pairs-of-songs-with-total-durations-divisible-by-60:numPairsDivisibleBy60, palindrome-linked-list:isPalindrome, palindrome-number:isPalindrome, palindrome-pairs:palindromePairs, palindrome-partitioning:partition, palindrome-partitioning-ii:minCut, palindrome-partitioning-iii:palindromePartition, palindrome-partitioning-iv:checkPartitioning, palindrome-rearrangement-queries:canMakePalindromeQueries, palindromic-substrings:countSubstrings, pancake-sorting:pancakeSort, parallel-courses-ii:minNumberOfSemesters, parallel-courses-iii:minimumTime, parse-lisp-expression:evaluate, parsing-a-boolean-expression:parseBoolExpr, partition-array-according-to-given-pivot:pivotArray, partition-array-for-maximum-sum:maxSumAfterPartitioning, partition-array-into-disjoint-intervals:partitionDisjoint, partition-array-into-three-parts-with-equal-sum:canThreePartsEqualSum, partition-array-into-two-arrays-to-minimize-sum-difference:minimumDifference, partition-array-such-that-maximum-difference-is-k:partitionArray, partition-equal-subset-sum:canPartition, partition-labels:partitionLabels, partition-list:partition, partition-string-into-minimum-beautiful-substrings:minimumBeautifulSubstrings, partition-string-into-substrings-with-values-at-most-k:minimumPartition, partition-to-k-equal-sum-subsets:canPartitionKSubsets, partitioning-into-minimum-number-of-deci-binary-numbers:minPartitions, pascals-triangle:generate, pascals-triangle-ii:getRow, pass-the-pillow:passThePillow, patching-array:minPatches, path-crossing:isPathCrossing, path-in-zigzag-labelled-binary-tree:pathInZigZagTree, path-sum:hasPathSum, path-sum-ii:pathSum, path-sum-iii:pathSum, path-with-maximum-gold:getMaximumGold, path-with-maximum-probability:maxProbability, path-with-minimum-effort:minimumEffortPath, paths-in-matrix-whose-sum-is-divisible-by-k:numberOfPaths, peak-index-in-a-mountain-array:peakIndexInMountainArray, peaks-in-array:countOfPeaks, people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list:peopleIndexes, percentage-of-letter-in-string:percentageLetter, perfect-number:checkPerfectNumber, perfect-rectangle:isRectangleCover, perfect-squares:numSquares, permutation-difference-between-two-strings:findPermutationDifference, permutation-in-string:checkInclusion, permutation-sequence:getPermutation, permutations:permute, permutations-ii:permuteUnique, pizza-with-3n-slices:maxSizeSlices, plates-between-candles:platesBetweenCandles, plus-one:plusOne, points-that-intersect-with-cars:numberOfPoints, poor-pigs:poorPigs, positions-of-large-groups:largeGroupPositions, possible-bipartition:possibleBipartition, power-of-four:isPowerOfFour, power-of-heroes:sumOfPower, power-of-three:isPowerOfThree, power-of-two:isPowerOfTwo, powerful-integers:powerfulIntegers, powx-n:myPow, predict-the-winner:predictTheWinner, prefix-and-suffix-search:WordFilter, preimage-size-of-factorial-zeroes-function:preimageSizeFZF, previous-permutation-with-one-swap:prevPermOpt1, prime-arrangements:numPrimeArrangements, prime-in-diagonal:diagonalPrime, prime-number-of-set-bits-in-binary-representation:countPrimeSetBits, prime-pairs-with-target-sum:findPrimePairs, prime-palindrome:primePalindrome, prime-subtraction-operation:primeSubOperation, print-binary-tree:printTree, print-words-vertically:printVertically, prison-cells-after-n-days:prisonAfterNDays, probability-of-a-two-boxes-having-the-same-number-of-distinct-balls:getProbability, process-restricted-friend-requests:friendRequests, process-tasks-using-servers:assignTasks, product-of-array-except-self:productExceptSelf, product-of-the-last-k-numbers:ProductOfNumbers, profitable-schemes:profitableSchemes, projection-area-of-3d-shapes:projectionArea, pseudo-palindromic-paths-in-a-binary-tree:pseudoPalindromicPaths , push-dominoes:pushDominoes, put-marbles-in-bags:putMarbles, pyramid-transition-matrix:pyramidTransition, queens-that-can-attack-the-king:queensAttacktheKing, queries-on-a-permutation-with-key:processQueries, queries-on-number-of-points-inside-a-circle:countPoints, query-kth-smallest-trimmed-number:smallestTrimmedNumbers, queue-reconstruction-by-height:reconstructQueue, rabbits-in-forest:numRabbits, race-car:racecar, random-flip-matrix:Solution, random-pick-index:Solution, random-pick-with-blacklist:Solution, random-pick-with-weight:Solution, random-point-in-non-overlapping-rectangles:Solution, range-addition-ii:maxCount, range-frequency-queries:RangeFreqQuery, range-module:RangeModule, range-product-queries-of-powers:productQueries, range-sum-of-bst:rangeSumBST, range-sum-of-sorted-subarray-sums:rangeSum, range-sum-query-2d-immutable:NumMatrix, range-sum-query-immutable:NumArray, range-sum-query-mutable:NumArray, rank-teams-by-votes:rankTeams, rank-transform-of-a-matrix:matrixRankTransform, rank-transform-of-an-array:arrayRankTransform, ransom-note:canConstruct, reach-a-number:reachNumber, reach-end-of-array-with-max-score:findMaximumScore, reachable-nodes-in-subdivided-graph:reachableNodes, reachable-nodes-with-restrictions:reachableNodes, reaching-points:reachingPoints, rearrange-array-elements-by-sign:rearrangeArray, rearrange-array-to-maximize-prefix-score:maxScore, rearrange-characters-to-make-target-string:rearrangeCharacters, rearrange-k-substrings-to-form-target-string:isPossibleToRearrange, rearrange-spaces-between-words:reorderSpaces, rearrange-words-in-a-sentence:arrangeWords, rearranging-fruits:minCost, reconstruct-a-2-row-binary-matrix:reconstructMatrix, reconstruct-itinerary:findItinerary, reconstruct-original-digits-from-english:originalDigits, recover-a-tree-from-preorder-traversal:recoverFromPreorder, recover-binary-search-tree:recoverTree, recover-the-original-array:recoverArray, rectangle-area:computeArea, rectangle-area-ii:rectangleArea, rectangle-overlap:isRectangleOverlap, redistribute-characters-to-make-all-strings-equal:makeEqual, reduce-array-size-to-the-half:minSetSize, reducing-dishes:maxSatisfaction, reduction-operations-to-make-the-array-elements-equal:reductionOperations, redundant-connection:findRedundantConnection, redundant-connection-ii:findRedundantDirectedConnection, reformat-date:reformatDate, reformat-phone-number:reformatNumber, reformat-the-string:reformat, regions-cut-by-slashes:regionsBySlashes, regular-expression-matching:isMatch, relative-ranks:findRelativeRanks, relative-sort-array:relativeSortArray, relocate-marbles:relocateMarbles, remove-adjacent-almost-equal-characters:removeAlmostEqualCharacters, remove-all-adjacent-duplicates-in-string:removeDuplicates, remove-all-adjacent-duplicates-in-string-ii:removeDuplicates, remove-all-occurrences-of-a-substring:removeOccurrences, remove-boxes:removeBoxes, remove-colored-pieces-if-both-neighbors-are-the-same-color:winnerOfGame, remove-comments:removeComments, remove-covered-intervals:removeCoveredIntervals, remove-digit-from-number-to-maximize-result:removeDigit, remove-duplicate-letters:removeDuplicateLetters, remove-duplicates-from-sorted-array:removeDuplicates, remove-duplicates-from-sorted-array-ii:removeDuplicates, remove-duplicates-from-sorted-list:deleteDuplicates, remove-duplicates-from-sorted-list-ii:deleteDuplicates, remove-element:removeElement, remove-invalid-parentheses:removeInvalidParentheses, remove-k-digits:removeKdigits, remove-letter-to-equalize-frequency:equalFrequency, remove-linked-list-elements:removeElements, remove-max-number-of-edges-to-keep-graph-fully-traversable:maxNumEdgesToRemove, remove-methods-from-project:remainingMethods, remove-nodes-from-linked-list:removeNodes, remove-nth-node-from-end-of-list:removeNthFromEnd, remove-one-element-to-make-the-array-strictly-increasing:canBeIncreasing, remove-outermost-parentheses:removeOuterParentheses, remove-palindromic-subsequences:removePalindromeSub, remove-stones-to-minimize-the-total:minStoneSum, remove-sub-folders-from-the-filesystem:removeSubfolders, remove-trailing-zeros-from-a-string:removeTrailingZeros, remove-zero-sum-consecutive-nodes-from-linked-list:removeZeroSumSublists, removing-minimum-and-maximum-from-array:minimumDeletions, removing-minimum-number-of-magic-beans:minimumRemoval, removing-stars-from-a-string:removeStars, reorder-data-in-log-files:reorderLogFiles, reorder-list:reorderList, reorder-routes-to-make-all-paths-lead-to-the-city-zero:minReorder, reordered-power-of-2:reorderedPowerOf2, reorganize-string:reorganizeString, repeated-dna-sequences:findRepeatedDnaSequences, repeated-string-match:repeatedStringMatch, repeated-substring-pattern:repeatedSubstringPattern, replace-all-digits-with-characters:replaceDigits, replace-all-s-to-avoid-consecutive-repeating-characters:modifyString, replace-elements-in-an-array:arrayChange, replace-elements-with-greatest-element-on-right-side:replaceElements, replace-non-coprime-numbers-in-array:replaceNonCoprimes, replace-question-marks-in-string-to-minimize-its-value:minimizeStringValue, replace-the-substring-for-balanced-string:balancedString, replace-words:replaceWords, report-spam-message:reportSpam, reshape-the-matrix:matrixReshape, restore-ip-addresses:restoreIpAddresses, restore-the-array:numberOfArrays, restore-the-array-from-adjacent-pairs:restoreArray, reveal-cards-in-increasing-order:deckRevealedIncreasing, reverse-integer:reverse, reverse-linked-list:reverseList, reverse-linked-list-ii:reverseBetween, reverse-nodes-in-even-length-groups:reverseEvenLengthGroups, reverse-nodes-in-k-group:reverseKGroup, reverse-odd-levels-of-binary-tree:reverseOddLevels, reverse-only-letters:reverseOnlyLetters, reverse-pairs:reversePairs, reverse-prefix-of-word:reversePrefix, reverse-string:reverseString, reverse-string-ii:reverseStr, reverse-subarray-to-maximize-array-value:maxValueAfterReverse, reverse-substrings-between-each-pair-of-parentheses:reverseParentheses, reverse-vowels-of-a-string:reverseVowels, reverse-words-in-a-string:reverseWords, reverse-words-in-a-string-iii:reverseWords, reward-top-k-students:topStudents, richest-customer-wealth:maximumWealth, right-triangles:numberOfRightTriangles, rings-and-rods:countPoints, rle-iterator:RLEIterator, robot-bounded-in-circle:isRobotBounded, robot-collisions:survivedRobotsHealths, robot-return-to-origin:judgeCircle, roman-to-integer:romanToInt, root-equals-sum-of-children:checkTree, rotate-array:rotate, rotate-function:maxRotateFunction, rotate-image:rotate, rotate-list:rotateRight, rotate-string:rotateString, rotated-digits:rotatedDigits, rotating-the-box:rotateTheBox, rotting-oranges:orangesRotting, row-with-maximum-ones:rowAndMaximumOnes, running-sum-of-1d-array:runningSum, russian-doll-envelopes:maxEnvelopes, same-tree:isSameTree, satisfiability-of-equality-equations:equationsPossible, score-after-flipping-matrix:matrixScore, score-of-a-string:scoreOfString, score-of-parentheses:scoreOfParentheses, scramble-string:isScramble, search-a-2d-matrix:searchMatrix, search-in-a-binary-search-tree:searchBST, search-in-rotated-sorted-array:search, search-in-rotated-sorted-array-ii:search, search-insert-position:searchInsert, search-suggestions-system:suggestedProducts, seat-reservation-manager:SeatManager, second-largest-digit-in-a-string:secondHighest, second-minimum-node-in-a-binary-tree:findSecondMinimumValue, second-minimum-time-to-reach-destination:secondMinimum, select-cells-in-grid-with-maximum-score:maxScore, self-crossing:isSelfCrossing, self-dividing-numbers:selfDividingNumbers, sell-diminishing-valued-colored-balls:maxProfit, selling-pieces-of-wood:sellingWood, semi-ordered-permutation:semiOrderedPermutation, sender-with-largest-word-count:largestWordCount, sentence-similarity-iii:areSentencesSimilar, separate-black-and-white-balls:minimumSteps, separate-the-digits-in-an-array:separateDigits, sequential-digits:sequentialDigits, sequentially-ordinal-rank-tracker:SORTracker, set-intersection-size-at-least-two:intersectionSizeTwo, set-matrix-zeroes:setZeroes, set-mismatch:findErrorNums, shift-2d-grid:shiftGrid, shift-distance-between-two-strings:shiftDistance, shifting-letters:shiftingLetters, shifting-letters-ii:shiftingLetters, shopping-offers:shoppingOffers, short-encoding-of-words:minimumLengthEncoding, shortest-and-lexicographically-smallest-beautiful-string:shortestBeautifulSubstring, shortest-bridge:shortestBridge, shortest-common-supersequence:shortestCommonSupersequence, shortest-completing-word:shortestCompletingWord, shortest-cycle-in-a-graph:findShortestCycle, shortest-distance-after-road-addition-queries-i:shortestDistanceAfterQueries, shortest-distance-after-road-addition-queries-ii:shortestDistanceAfterQueries, shortest-distance-to-a-character:shortestToChar, shortest-distance-to-target-string-in-a-circular-array:closetTarget, shortest-impossible-sequence-of-rolls:shortestSequence, shortest-palindrome:shortestPalindrome, shortest-path-in-a-grid-with-obstacles-elimination:shortestPath, shortest-path-in-binary-matrix:shortestPathBinaryMatrix, shortest-path-to-get-all-keys:shortestPathAllKeys, shortest-path-visiting-all-nodes:shortestPathLength, shortest-path-with-alternating-colors:shortestAlternatingPaths, shortest-string-that-contains-three-strings:minimumString, shortest-subarray-to-be-removed-to-make-array-sorted:findLengthOfShortestSubarray, shortest-subarray-with-or-at-least-k-i:minimumSubarrayLength, shortest-subarray-with-or-at-least-k-ii:minimumSubarrayLength, shortest-subarray-with-sum-at-least-k:shortestSubarray, shortest-uncommon-substring-in-an-array:shortestSubstrings, shortest-unsorted-continuous-subarray:findUnsortedSubarray, shuffle-an-array:Solution, shuffle-string:restoreString, shuffle-the-array:shuffle, sign-of-the-product-of-an-array:arraySign, similar-string-groups:numSimilarGroups, simple-bank-system:Bank, simplified-fractions:simplifiedFractions, simplify-path:simplifyPath, single-element-in-a-sorted-array:singleNonDuplicate, single-number:singleNumber, single-number-ii:singleNumber, single-number-iii:singleNumber, single-threaded-cpu:getOrder, sliding-puzzle:slidingPuzzle, sliding-subarray-beauty:getSubarrayBeauty, sliding-window-maximum:maxSlidingWindow, sliding-window-median:medianSlidingWindow, slowest-key:slowestKey, smallest-divisible-digit-product-i:smallestNumber, smallest-divisible-digit-product-ii:smallestNumber, smallest-even-multiple:smallestEvenMultiple, smallest-good-base:smallestGoodBase, smallest-index-with-equal-value:smallestEqual, smallest-integer-divisible-by-k:smallestRepunitDivByK, smallest-k-length-subsequence-with-occurrences-of-a-letter:smallestSubsequence, smallest-missing-genetic-value-in-each-subtree:smallestMissingValueSubtree, smallest-missing-integer-greater-than-sequential-prefix-sum:missingInteger, smallest-missing-non-negative-integer-after-operations:findSmallestInteger, smallest-number-in-infinite-set:SmallestInfiniteSet, smallest-number-with-all-set-bits:smallestNumber, smallest-range-covering-elements-from-k-lists:smallestRange, smallest-range-i:smallestRangeI, smallest-range-ii:smallestRangeII, smallest-rotation-with-highest-score:bestRotation, smallest-string-starting-from-leaf:smallestFromLeaf, smallest-string-with-a-given-numeric-value:getSmallestString, smallest-string-with-swaps:smallestStringWithSwaps, smallest-subarrays-with-maximum-bitwise-or:smallestSubarrays, smallest-subsequence-of-distinct-characters:smallestSubsequence, smallest-substring-with-identical-characters-i:minLength, smallest-substring-with-identical-characters-ii:minLength, smallest-subtree-with-all-the-deepest-nodes:subtreeWithAllDeepest, smallest-sufficient-team:smallestSufficientTeam, smallest-value-after-replacing-with-sum-of-prime-factors:smallestValue, smallest-value-of-the-rearranged-number:smallestNumber, snake-in-matrix:finalPositionOfSnake, snakes-and-ladders:snakesAndLadders, snapshot-array:SnapshotArray, solve-the-equation:solveEquation, solving-questions-with-brainpower:mostPoints, sort-an-array:sortArray, sort-array-by-increasing-frequency:frequencySort, sort-array-by-parity:sortArrayByParity, sort-array-by-parity-ii:sortArrayByParityII, sort-characters-by-frequency:frequencySort, sort-colors:sortColors, sort-even-and-odd-indices-independently:sortEvenOdd, sort-integers-by-the-number-of-1-bits:sortByBits, sort-integers-by-the-power-value:getKth, sort-items-by-groups-respecting-dependencies:sortItems, sort-list:sortList, sort-the-jumbled-numbers:sortJumbled, sort-the-matrix-diagonally:diagonalSort, sort-the-people:sortPeople, sort-the-students-by-their-kth-score:sortTheStudents, sort-vowels-in-a-string:sortVowels, sorted-gcd-pair-queries:gcdValues, sorting-the-sentence:sortSentence, sorting-three-groups:minimumOperations, soup-servings:soupServings, special-array-i:isArraySpecial, special-array-ii:isArraySpecial, special-array-with-x-elements-greater-than-or-equal-x:specialArray, special-binary-string:makeLargestSpecial, special-permutations:specialPerm, special-positions-in-a-binary-matrix:numSpecial, spiral-matrix:spiralOrder, spiral-matrix-ii:generateMatrix, spiral-matrix-iii:spiralMatrixIII, spiral-matrix-iv:spiralMatrix, split-a-string-in-balanced-strings:balancedStringSplit, split-a-string-into-the-max-number-of-unique-substrings:maxUniqueSplit, split-array-into-consecutive-subsequences:isPossible, split-array-into-fibonacci-sequence:splitIntoFibonacci, split-array-into-maximum-number-of-subarrays:maxSubarrays, split-array-largest-sum:splitArray, split-array-with-same-average:splitArraySameAverage, split-linked-list-in-parts:splitListToParts, split-message-based-on-limit:splitMessage, split-strings-by-separator:splitWordsBySeparator, split-the-array:isPossibleToSplit, split-the-array-to-make-coprime-products:findValidSplit, split-two-strings-to-make-palindrome:checkPalindromeFormation, split-with-minimum-sum:splitNum, splitting-a-string-into-descending-consecutive-values:splitString, sqrtx:mySqrt, squares-of-a-sorted-array:sortedSquares, stamping-the-grid:possibleToStamp, stamping-the-sequence:movesToStamp, statistics-from-a-large-sample:sampleStats, step-by-step-directions-from-a-binary-tree-node-to-another:getDirections, steps-to-make-array-non-decreasing:totalSteps, stickers-to-spell-word:minStickers, stock-price-fluctuation:StockPrice, stone-game:stoneGame, stone-game-ii:stoneGameII, stone-game-iii:stoneGameIII, stone-game-iv:winnerSquareGame, stone-game-ix:stoneGameIX, stone-game-v:stoneGameV, stone-game-vi:stoneGameVI, stone-game-vii:stoneGameVII, stone-game-viii:stoneGameVIII, stone-removal-game:canAliceWin, strange-printer:strangePrinter, strange-printer-ii:isPrintable, stream-of-characters:StreamChecker, strictly-palindromic-number:isStrictlyPalindromic, string-compression:compress, string-compression-ii:getLengthOfOptimalCompression, string-compression-iii:compressedString, string-matching-in-an-array:stringMatching, string-to-integer-atoi:myAtoi, string-transformation:numberOfWays, string-without-aaa-or-bbb:strWithout3a3b, strong-password-checker:strongPasswordChecker, strong-password-checker-ii:strongPasswordCheckerII, student-attendance-record-i:checkRecord, student-attendance-record-ii:checkRecord, subarray-product-less-than-k:numSubarrayProductLessThanK, subarray-sum-equals-k:subarraySum, subarray-sums-divisible-by-k:subarraysDivByK, subarray-with-elements-greater-than-varying-threshold:validSubarraySize, subarrays-distinct-element-sum-of-squares-i:sumCounts, subarrays-distinct-element-sum-of-squares-ii:sumCounts, subarrays-with-k-different-integers:subarraysWithKDistinct, subdomain-visit-count:subdomainVisits, subrectangle-queries:SubrectangleQueries, subsequence-with-the-minimum-score:minimumScore, subsequences-with-a-unique-middle-mode-i:subsequencesWithMiddleMode, subsets:subsets, subsets-ii:subsetsWithDup, substring-matching-pattern:hasMatch, substring-with-concatenation-of-all-words:findSubstring, substring-with-largest-variance:largestVariance, substring-xor-queries:substringXorQueries, substrings-of-size-three-with-distinct-characters:countGoodSubstrings, subtract-the-product-and-sum-of-digits-of-an-integer:subtractProductAndSum, subtree-of-another-tree:isSubtree, successful-pairs-of-spells-and-potions:successfulPairs, sudoku-solver:solveSudoku, sum-game:sumGame, sum-in-a-matrix:matrixSum, sum-multiples:sumOfMultiples, sum-of-absolute-differences-in-a-sorted-array:getSumAbsoluteDifferences, sum-of-all-odd-length-subarrays:sumOddLengthSubarrays, sum-of-all-subset-xor-totals:subsetXORSum, sum-of-beauty-in-the-array:sumOfBeauties, sum-of-beauty-of-all-substrings:beautySum, sum-of-digit-differences-of-all-pairs:sumDigitDifferences, sum-of-digits-in-base-k:sumBase, sum-of-digits-of-string-after-convert:getLucky, sum-of-distances:distance, sum-of-distances-in-tree:sumOfDistancesInTree, sum-of-even-numbers-after-queries:sumEvenAfterQueries, sum-of-floored-pairs:sumOfFlooredPairs, sum-of-good-subsequences:sumOfGoodSubsequences, sum-of-imbalance-numbers-of-all-subarrays:sumImbalanceNumbers, sum-of-k-mirror-numbers:kMirror, sum-of-left-leaves:sumOfLeftLeaves, sum-of-matrix-after-queries:matrixSumQueries, sum-of-mutated-array-closest-to-target:findBestValue, sum-of-nodes-with-even-valued-grandparent:sumEvenGrandparent, sum-of-number-and-its-reverse:sumOfNumberAndReverse, sum-of-numbers-with-units-digit-k:minimumNumbers, sum-of-prefix-scores-of-strings:sumPrefixScores, sum-of-root-to-leaf-binary-numbers:sumRootToLeaf, sum-of-scores-of-built-strings:sumScores, sum-of-square-numbers:judgeSquareSum, sum-of-squares-of-special-elements:sumOfSquares, sum-of-subarray-minimums:sumSubarrayMins, sum-of-subarray-ranges:subArrayRanges, sum-of-subsequence-widths:sumSubseqWidths, sum-of-total-strength-of-wizards:totalStrength, sum-of-two-integers:getSum, sum-of-unique-elements:sumOfUnique, sum-of-values-at-indices-with-k-set-bits:sumIndicesWithKSetBits, sum-of-variable-length-subarrays:subarraySum, sum-root-to-leaf-numbers:sumNumbers, summary-ranges:summaryRanges, super-egg-drop:superEggDrop, super-palindromes:superpalindromesInRange, super-pow:superPow, super-ugly-number:nthSuperUglyNumber, super-washing-machines:findMinMoves, surface-area-of-3d-shapes:surfaceArea, surrounded-regions:solve, swap-adjacent-in-lr-string:canTransform, swap-for-longest-repeated-character-substring:maxRepOpt1, swap-nodes-in-pairs:swapPairs, swapping-nodes-in-a-linked-list:swapNodes, swim-in-rising-water:swimInWater, symmetric-tree:isSymmetric, tag-validator:isValid, take-gifts-from-the-richest-pile:pickGifts, take-k-of-each-character-from-left-and-right:takeCharacters, taking-maximum-energy-from-the-mystic-dungeon:maximumEnergy, tallest-billboard:tallestBillboard, target-sum:findTargetSumWays, task-scheduler:leastInterval, task-scheduler-ii:taskSchedulerII, teemo-attacking:findPoisonedDuration, text-justification:fullJustify, the-earliest-and-latest-rounds-where-players-compete:earliestAndLatest, the-employee-that-worked-on-the-longest-task:hardestWorker, the-k-strongest-values-in-an-array:getStrongest, the-k-th-lexicographical-string-of-all-happy-strings-of-length-n:getHappyString, the-k-weakest-rows-in-a-matrix:kWeakestRows, the-kth-factor-of-n:kthFactor, the-latest-time-to-catch-a-bus:latestTimeCatchTheBus, the-number-of-beautiful-subsets:beautifulSubsets, the-number-of-full-rounds-you-have-played:numberOfRounds, the-number-of-good-subsets:numberOfGoodSubsets, the-number-of-the-smallest-unoccupied-chair:smallestChair, the-number-of-weak-characters-in-the-game:numberOfWeakCharacters, the-score-of-students-solving-math-expression:scoreOfStudents, the-skyline-problem:getSkyline, the-time-when-the-network-becomes-idle:networkBecomesIdle, the-two-sneaky-numbers-of-digitville:getSneakyNumbers, third-maximum-number:thirdMax, thousand-separator:thousandSeparator, three-consecutive-odds:threeConsecutiveOdds, three-divisors:isThree, three-equal-parts:threeEqualParts, throne-inheritance:ThroneInheritance, tiling-a-rectangle-with-the-fewest-squares:tilingRectangle, time-based-key-value-store:TimeMap, time-needed-to-buy-tickets:timeRequiredToBuy, time-needed-to-inform-all-employees:numOfMinutes, time-needed-to-rearrange-a-binary-string:secondsToRemoveOccurrences, time-taken-to-mark-all-nodes:timeTaken, time-to-cross-a-bridge:findCrossingTime, to-lower-case:toLowerCase, toeplitz-matrix:isToeplitzMatrix, top-k-frequent-elements:topKFrequent, top-k-frequent-words:topKFrequent, total-appeal-of-a-string:appealSum, total-characters-in-string-after-transformations-i:lengthAfterTransformations, total-characters-in-string-after-transformations-ii:lengthAfterTransformations, total-cost-to-hire-k-workers:totalCost, total-distance-traveled:distanceTraveled, total-hamming-distance:totalHammingDistance, transform-to-chessboard:movesToChessboard, transformed-array:constructTransformedArray, transpose-matrix:transpose, trapping-rain-water:trap, trapping-rain-water-ii:trapRainWater, tree-of-coprimes:getCoprimes, triangle:minimumTotal, trim-a-binary-search-tree:trimBST, triples-with-bitwise-and-equal-to-zero:countTriplets, truncate-sentence:truncateSentence, tuple-with-same-product:tupleSameProduct, tweet-counts-per-frequency:TweetCounts, two-best-non-overlapping-events:maxTwoEvents, two-city-scheduling:twoCitySchedCost, two-furthest-houses-with-different-colors:maxDistance, two-out-of-three:twoOutOfThree, two-sum:twoSum, two-sum-ii-input-array-is-sorted:twoSum, two-sum-iv-input-is-a-bst:findTarget, type-of-triangle:triangleType, ugly-number:isUgly, ugly-number-ii:nthUglyNumber, ugly-number-iii:nthUglyNumber, uncommon-words-from-two-sentences:uncommonFromSentences, uncrossed-lines:maxUncrossedLines, unique-binary-search-trees:numTrees, unique-binary-search-trees-ii:generateTrees, unique-email-addresses:numUniqueEmails, unique-length-3-palindromic-subsequences:countPalindromicSubsequence, unique-morse-code-words:uniqueMorseRepresentations, unique-number-of-occurrences:uniqueOccurrences, unique-paths:uniquePaths, unique-paths-ii:uniquePathsWithObstacles, unique-paths-iii:uniquePathsIII, unique-substrings-in-wraparound-string:findSubstringInWraproundString, univalued-binary-tree:isUnivalTree, using-a-robot-to-print-the-lexicographically-smallest-string:robotWithString, utf-8-validation:validUtf8, valid-anagram:isAnagram, valid-arrangement-of-pairs:validArrangement, valid-boomerang:isBoomerang, valid-mountain-array:validMountainArray, valid-number:isNumber, valid-palindrome:isPalindrome, valid-palindrome-ii:validPalindrome, valid-parentheses:isValid, valid-parenthesis-string:checkValidString, valid-perfect-square:isPerfectSquare, valid-permutations-for-di-sequence:numPermsDISequence, valid-square:validSquare, valid-sudoku:isValidSudoku, valid-tic-tac-toe-state:validTicTacToe, valid-triangle-number:triangleNumber, valid-word:isValid, validate-binary-search-tree:isValidBST, validate-binary-tree-nodes:validateBinaryTreeNodes, validate-ip-address:validIPAddress, validate-stack-sequences:validateStackSequences, verbal-arithmetic-puzzle:isSolvable, verify-preorder-serialization-of-a-binary-tree:isValidSerialization, verifying-an-alien-dictionary:isAlienSorted, vertical-order-traversal-of-a-binary-tree:verticalTraversal, video-stitching:videoStitching, visit-array-positions-to-maximize-score:maxScore, vowel-spellchecker:spellchecker, vowels-game-in-a-string:doesAliceWin, vowels-of-all-substrings:countVowels, walking-robot-simulation:robotSim, walking-robot-simulation-ii:Robot, water-and-jug-problem:canMeasureWater, water-bottles:numWaterBottles, water-bottles-ii:maxBottlesDrunk, watering-plants:wateringPlants, watering-plants-ii:minimumRefill, ways-to-express-an-integer-as-sum-of-powers:numberOfWays, ways-to-make-a-fair-array:waysToMakeFair, ways-to-split-array-into-good-subarrays:numberOfGoodSubarraySplits, ways-to-split-array-into-three-subarrays:waysToSplit, where-will-the-ball-fall:findBall, widest-vertical-area-between-two-points-containing-no-points:maxWidthOfVerticalArea, wiggle-sort-ii:wiggleSort, wiggle-subsequence:wiggleMaxLength, wildcard-matching:isMatch, word-break:wordBreak, word-break-ii:wordBreak, word-ladder:ladderLength, word-ladder-ii:findLadders, word-pattern:wordPattern, word-search:exist, word-search-ii:findWords, word-subsets:wordSubsets, words-within-two-edits-of-dictionary:twoEditWords, x-of-a-kind-in-a-deck-of-cards:hasGroupsSizeX, xor-operation-in-an-array:xorOperation, xor-queries-of-a-subarray:xorQueries, zero-array-transformation-i:isZeroArray, zero-array-transformation-ii:minZeroArray, zero-array-transformation-iii:maxRemoval, zigzag-conversion:convert, zigzag-grid-traversal-with-skip:zigzagTraversal, zuma-game:findMinStep